#usda 1.0

def Camera "camera"
{
    matrix4d xformOp:transform = ( (1, 0, 0, 0),
                                   (0, 1, 0, 0),
                                   (0, 0, 1, 0),
                                   (0, 0, 20, 1) )
    uniform token[] xformOpOrder = ["xformOp:transform"]

    float focalLength = 300;
    float horizontalAperture = 240;
    float verticalAperture = 240
    float2 clippingRange = (0.01, 10000)
}
def Mesh "floor" 
{
    float3[] extent = [(-0.5, 0, -0.5), (0.5, 0, 0.5)]
    int[] faceVertexCounts = [4]
    int[] faceVertexIndices = [0, 1, 3, 2]
    point3f[] points = [(-0.5, 0, 0.5), (0.5, 0, 0.5), (-0.5, 0, -0.5), (0.5, 0, -0.5)]
    
    matrix4d xformOp:transform = ( (20, 0, 0, 0),
                                   ( 0, 20, 0, 0),
                                   ( 0, 0, 20, 0),
                                   ( 0, 0, 0, 1) )
    uniform token[] xformOpOrder = ["xformOp:transform"]
    rel material:binding = </surface>
}

def Mesh "wall" 
{
    float3[] extent = [(-0.5, 0, -0.5), (0.5, 0, 0.5)]
    int[] faceVertexCounts = [4]
    int[] faceVertexIndices = [0, 1, 3, 2]
    point3f[] points = [(-0.5, 0, 0.5), (0.5, 0, 0.5), (-0.5, 0, -0.5), (0.5, 0, -0.5)]

    matrix4d xformOp:transform = ( (20, 0, 0, 0),
                                   (0, 0, 1, 0),
                                   (0, -10, 0, 0),
                                   (0, 5, -10, 1) )
    uniform token[] xformOpOrder = ["xformOp:transform"]
    rel material:binding = </surface>
}

def Material "surface"
{
    color4f outputs:moonray:surface.connect = <baseMtl.outputs:surface>

    def Shader "baseMtl"
    {
        uniform token info:id = "BaseMaterial"
        color4f outputs:surface
    }
}


def MoonrayLightFilter "combine"
{
    uniform token moonray:class = "CombineLightFilter"    
    int moonray:mode = 0
    rel moonray:light_filters = [</rod1>, </rod2>]
}

def MoonrayLightFilter "rod1"
{
    uniform token moonray:class = "RodLightFilter"
    matrix4d xformOp:transform = ( (1, 0, 0, 0),
                                (0, 1, 0, 0),
                                (0, 0, 1, 0),
                                 (2, 11, -6, 1) )
    uniform token[] xformOpOrder = ["xformOp:transform"]                         
    float moonray:depth = 5
    float moonray:height = 25
    float moonray:radius = 2
    float moonray:width = 4
    color3f moonray:color = (1,1,0)
}

def MoonrayLightFilter "rod2"
{
    uniform token moonray:class = "RodLightFilter"
    matrix4d xformOp:transform = ( (1, 0, 0, 0),
                                    (0, 1, 0, 0),
                                    (0, 0, 1, 0),
                                     (-2, 11, -6, 1) )
    uniform token[] xformOpOrder = ["xformOp:transform"]                         
    float moonray:depth = 5
    float moonray:height = 25
    float moonray:radius = 2
    float moonray:width = 4
    color3f moonray:color = (0,1,1)
}


def DiskLight "spot"
{
    uniform token moonray:class = "SpotLight"
    matrix4d xformOp:transform = ( (0, 0, 1, 0),
                                   (1, 0, 0, 0),
                                   (0, 1, 0, 0),
                                   (0, 9, -8, 1) )
    uniform token[] xformOpOrder = ["xformOp:transform"]
    float inputs:intensity = 0.2
    float inputs:shaping:cone:angle = 45
    bool inputs:normalize = true
    rel light:filters = [</combine>]
}