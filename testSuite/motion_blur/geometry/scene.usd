#usda 1.0
(
    defaultPrim = "points_hermite"
    endTimeCode = 6
    framesPerSecond = 24
    metersPerUnit = 1
    startTimeCode = 4
    timeCodesPerSecond = 24
    upAxis = "Y"
)

def Xform "grid_node_xform" (
    prepend apiSchemas = ["MaterialBindingAPI"]
    kind = "component"
)
{
    rel material:binding = </materials/usdpreviewsurface1>
    matrix4d xformOp:transform:xform.timeSamples = {
        4: ( (-0.5979049830575189, 0.8015669848708765, 0, 0), (-0.8015669848708765, -0.5979049830575189, 0, 0), (0, 0, 1, 0), (-7, 10, 0, 1) ),
        5: ( (-1, 1.0106430996148606e-15, 0, 0), (-1.0106430996148606e-15, -1, 0, 0), (0, 0, 1, 0), (-7, 10, 0, 1) ),
        6: ( (-0.597904983057519, -0.8015669848708764, 0, 0), (0.8015669848708764, -0.597904983057519, 0, 0), (0, 0, 1, 0), (-7, 10, 0, 1) ),
    }
    uniform token[] xformOpOrder = ["xformOp:transform:xform"]

    def Mesh "mesh_0" (
        prepend apiSchemas = ["MaterialBindingAPI"]
    )
    {
        float3[] extent = [(-1, -1, 0), (1, 1, 0)]
        int[] faceVertexCounts = [4]
        int[] faceVertexIndices = [0, 1, 3, 2]
        rel material:binding = </materials/usdpreviewsurface1>
        uniform token orientation = "leftHanded"
        point3f[] points = [(-1, -1, 0), (1, -1, 0), (-1, 1, 0), (1, 1, 0)] (
            interpolation = "vertex"
        )
        color3f[] primvars:displayColor = [(1, 1, 0), (1, 1, 0), (1, 1, 0), (1, 1, 0)] (
            interpolation = "vertex"
        )
        int[] primvars:displayColor:indices = None
        uniform token subdivisionScheme = "none"
    }
}

def Xform "grid_frame_delta" (
    prepend apiSchemas = ["MaterialBindingAPI"]
    kind = "component"
)
{
    rel material:binding = </materials/usdpreviewsurface1>
    matrix4d xformOp:transform:xform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (-7, 7, 0, 1) )
    uniform token[] xformOpOrder = ["xformOp:transform:xform"]

    def Mesh "mesh_0" (
        prepend apiSchemas = ["MaterialBindingAPI"]
    )
    {
        float3[] extent.timeSamples = {
            4: [(-1.399472, -1.399472, 0), (1.399472, 1.399472, 0)],
            5: [(-1, -1, 0), (1, 1, 0)],
            6: [(-1.399472, -1.399472, 0), (1.399472, 1.399472, 0)],
        }
        int[] faceVertexCounts.timeSamples = {
            5: [4],
        }
        int[] faceVertexIndices.timeSamples = {
            5: [0, 1, 3, 2],
        }
        rel material:binding = </materials/usdpreviewsurface1>
        uniform token orientation = "leftHanded"
        point3f[] points (
            interpolation = "vertex"
        )
        point3f[] points.timeSamples = {
            4: [(1.399472, -0.20366198, 0), (0.20366198, 1.399472, 0), (-0.20366198, -1.399472, 0), (-1.399472, 0.20366198, 0)],
            5: [(1, 1, 0), (-1, 1, 0), (1, -1, 0), (-1, -1, 0)],
            6: [(-0.20366198, 1.399472, 0), (-1.399472, -0.20366198, 0), (1.399472, 0.20366198, 0), (0.20366198, -1.399472, 0)],
        }
        color3f[] primvars:displayColor (
            interpolation = "vertex"
        )
        color3f[] primvars:displayColor.timeSamples = {
            4: [(1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0)],
            5: [(1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0)],
            6: [(1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0)],
        }
        int[] primvars:displayColor:indices = None
        uniform token subdivisionScheme = "none"
    }
}

def Xform "grid_velocity" (
    prepend apiSchemas = ["MaterialBindingAPI"]
    kind = "component"
)
{
    rel material:binding = </materials/usdpreviewsurface1>
    matrix4d xformOp:transform:xform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (-7, 4, 0, 1) )
    uniform token[] xformOpOrder = ["xformOp:transform:xform"]

    def Mesh "mesh_0" (
        prepend apiSchemas = ["MaterialBindingAPI"]
    )
    {
        float3[] extent = [(-1, -1, 0), (1, 1, 0)]
        int[] faceVertexCounts = [4]
        int[] faceVertexIndices = [0, 1, 3, 2]
        rel material:binding = </materials/usdpreviewsurface1>
        uniform token orientation = "leftHanded"
        point3f[] points = [(-1, -1, 0), (1, -1, 0), (-1, 1, 0), (1, 1, 0)] (
            interpolation = "vertex"
        )
        color3f[] primvars:displayColor = [(0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0)] (
            interpolation = "vertex"
        )
        int[] primvars:displayColor:indices = None
        uniform token subdivisionScheme = "none"
        vector3f[] velocities = [(100, 0, 0), (100, 0, 0), (100, 0, 0), (100, 0, 0)] (
            interpolation = "vertex"
        )
    }
}

def Xform "grid_acceleration" (
    prepend apiSchemas = ["MaterialBindingAPI"]
    kind = "component"
)
{
    rel material:binding = </materials/usdpreviewsurface1>
    matrix4d xformOp:transform:xform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (-7, 1, 0, 1) )
    uniform token[] xformOpOrder = ["xformOp:transform:xform"]

    def Mesh "mesh_0" (
        prepend apiSchemas = ["MaterialBindingAPI"]
    )
    {
        vector3f[] accelerations = [(0, 2500, 0), (0, 2500, 0), (0, 2500, 0), (0, 2500, 0)] (
            interpolation = "vertex"
        )
        float3[] extent = [(-1, -1, 0), (1, 1, 0)]
        int[] faceVertexCounts = [4]
        int[] faceVertexIndices = [0, 1, 3, 2]
        rel material:binding = </materials/usdpreviewsurface1>
        uniform token orientation = "leftHanded"
        point3f[] points = [(-1, -1, 0), (1, -1, 0), (-1, 1, 0), (1, 1, 0)] (
            interpolation = "vertex"
        )
        color3f[] primvars:displayColor = [(0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1)] (
            interpolation = "vertex"
        )
        int[] primvars:displayColor:indices = None
        uniform token subdivisionScheme = "none"
        vector3f[] velocities = [(100, 0, 0), (100, 0, 0), (100, 0, 0), (100, 0, 0)] (
            interpolation = "vertex"
        )
    }
}

def Xform "grid_hermite" (
    prepend apiSchemas = ["MaterialBindingAPI"]
    kind = "component"
)
{
    rel material:binding = </materials/usdpreviewsurface1>
    matrix4d xformOp:transform:xform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (-7, -2, 0, 1) )
    uniform token[] xformOpOrder = ["xformOp:transform:xform"]

    def Mesh "mesh_0" (
        prepend apiSchemas = ["MaterialBindingAPI"]
    )
    {
        float3[] extent.timeSamples = {
            4: [(-1.399472, -1.399472, 0), (1.399472, 1.399472, 0)],
            5: [(-1, -1, 0), (1, 1, 0)],
            6: [(-1.399472, -1.399472, 0), (1.399472, 1.399472, 0)],
        }
        int[] faceVertexCounts.timeSamples = {
            5: [4],
        }
        int[] faceVertexIndices.timeSamples = {
            5: [0, 1, 3, 2],
        }
        rel material:binding = </materials/usdpreviewsurface1>
        uniform token orientation = "leftHanded"
        point3f[] points (
            interpolation = "vertex"
        )
        point3f[] points.timeSamples = {
            4: [(1.399472, -0.20366198, 0), (0.20366198, 1.399472, 0), (-0.20366198, -1.399472, 0), (-1.399472, 0.20366198, 0)],
            5: [(1, 1, 0), (-1, 1, 0), (1, -1, 0), (-1, -1, 0)],
            6: [(-0.20366198, 1.399472, 0), (-1.399472, -0.20366198, 0), (1.399472, 0.20366198, 0), (0.20366198, -1.399472, 0)],
        }
        color3f[] primvars:displayColor (
            interpolation = "vertex"
        )
        color3f[] primvars:displayColor.timeSamples = {
            4: [(1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1)],
            5: [(1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1)],
            6: [(1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1)],
        }
        int[] primvars:displayColor:indices = None
        uniform token subdivisionScheme = "none"
        vector3f[] velocities (
            interpolation = "vertex"
        )
        vector3f[] velocities.timeSamples = {
            4: [(100, 0, 0), (100, 0, 0), (100, 0, 0), (100, 0, 0)],
            5: [(100, 0, 0), (100, 0, 0), (100, 0, 0), (100, 0, 0)],
            6: [(100, 0, 0), (100, 0, 0), (100, 0, 0), (100, 0, 0)],
        }
    }
}

def Xform "curves_node_xform" (
    prepend apiSchemas = ["MaterialBindingAPI"]
    kind = "component"
)
{
    rel material:binding = </materials/usdpreviewsurface1>
    matrix4d xformOp:transform:xform.timeSamples = {
        4: ( (-0.5979049830575189, 0.8015669848708765, 0, 0), (-0.8015669848708765, -0.5979049830575189, 0, 0), (0, 0, 1, 0), (0, 10, 0, 1) ),
        5: ( (-1, 1.0106430996148606e-15, 0, 0), (-1.0106430996148606e-15, -1, 0, 0), (0, 0, 1, 0), (0, 10, 0, 1) ),
        6: ( (-0.597904983057519, -0.8015669848708764, 0, 0), (0.8015669848708764, -0.597904983057519, 0, 0), (0, 0, 1, 0), (0, 10, 0, 1) ),
    }
    uniform token[] xformOpOrder = ["xformOp:transform:xform"]

    def BasisCurves "curve_0" (
        prepend apiSchemas = ["MaterialBindingAPI"]
    )
    {
        uniform token basis = "bspline"
        int[] curveVertexCounts = [10, 10, 10, 10, 10]
        float3[] extent = [(-0.8, -1.42805, 0), (1.1712201, 1.42805, 0)]
        rel material:binding = </materials/usdpreviewsurface1>
        point3f[] points = [(-0.6, -0.5, 0), (-0.6, -0.5, 0), (-0.6, -0.5, 0), (-0.8, -0.3, 0), (-0.40000004, -0.099999994, 0), (-0.8, 0.100000024, 0), (-0.40000004, 0.3, 0), (-0.8, 0.5, 0), (-0.8, 0.5, 0), (-0.8, 0.5, 0), (-0.3, -0.65, 0), (-0.3, -0.65, 0), (-0.3, -0.65, 0), (-0.56, -0.39000002, 0), (-0.04000002, -0.13000003, 0), (-0.56, 0.13, 0), (-0.04000002, 0.39, 0), (-0.56, 0.65, 0), (-0.56, 0.65, 0), (-0.56, 0.65, 0), (0, -0.845, 0), (0, -0.845, 0), (0, -0.845, 0), (-0.33800003, -0.50699997, 0), (0.33800006, -0.16899994, 0), (-0.33800003, 0.16900003, 0), (0.33800006, 0.5070001, 0), (-0.33800003, 0.845, 0), (-0.33800003, 0.845, 0), (-0.33800003, 0.845, 0), (0.29999995, -1.0985, 0), (0.29999995, -1.0985, 0), (0.29999995, -1.0985, 0), (-0.13940006, -0.6591, 0), (0.7394, -0.21969998, 0), (-0.13940006, 0.2197001, 0), (0.7394, 0.65910006, 0), (-0.13940006, 1.0985, 0), (-0.13940006, 1.0985, 0), (-0.13940006, 1.0985, 0), (0.6, -1.42805, 0), (0.6, -1.42805, 0), (0.6, -1.42805, 0), (0.028779984, -0.85682994, 0), (1.1712201, -0.2856099, 0), (0.028779984, 0.28561014, 0), (1.1712201, 0.8568301, 0), (0.028779984, 1.42805, 0), (0.028779984, 1.42805, 0), (0.028779984, 1.42805, 0)] (
            interpolation = "vertex"
        )
        color3f[] primvars:displayColor = [(1, 1, 0), (1, 1, 0), (1, 1, 0), (1, 1, 0), (1, 1, 0), (1, 1, 0), (1, 1, 0), (1, 1, 0), (1, 1, 0), (1, 1, 0), (1, 1, 0), (1, 1, 0), (1, 1, 0), (1, 1, 0), (1, 1, 0), (1, 1, 0), (1, 1, 0), (1, 1, 0), (1, 1, 0), (1, 1, 0), (1, 1, 0), (1, 1, 0), (1, 1, 0), (1, 1, 0), (1, 1, 0), (1, 1, 0), (1, 1, 0), (1, 1, 0), (1, 1, 0), (1, 1, 0), (1, 1, 0), (1, 1, 0), (1, 1, 0), (1, 1, 0), (1, 1, 0), (1, 1, 0), (1, 1, 0), (1, 1, 0), (1, 1, 0), (1, 1, 0), (1, 1, 0), (1, 1, 0), (1, 1, 0), (1, 1, 0), (1, 1, 0), (1, 1, 0), (1, 1, 0), (1, 1, 0), (1, 1, 0), (1, 1, 0)] (
            interpolation = "vertex"
        )
        int[] primvars:displayColor:indices = None
        uniform token type = "cubic"
        float[] widths = [0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05] (
            interpolation = "vertex"
        )
        uniform token wrap = "nonperiodic"
    }
}

def Xform "curves_frame_delta" (
    prepend apiSchemas = ["MaterialBindingAPI"]
    kind = "component"
)
{
    rel material:binding = </materials/usdpreviewsurface1>
    matrix4d xformOp:transform:xform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 7, 0, 1) )
    uniform token[] xformOpOrder = ["xformOp:transform:xform"]

    def BasisCurves "curve_0" (
        prepend apiSchemas = ["MaterialBindingAPI"]
    )
    {
        uniform token basis = "bspline"
        int[] curveVertexCounts.timeSamples = {
            5: [10, 10, 10, 10, 10],
        }
        float3[] extent.timeSamples = {
            4: [(-1.387085, -0.94020605, 0), (0.78593475, 1.3347784, 0)],
            5: [(-1.1712201, -1.42805, 0), (0.8, 1.42805, 0)],
            6: [(-1.5034208, -1.4511143, 0), (1.12747, 0.82062507, 0)],
        }
        rel material:binding = </materials/usdpreviewsurface1>
        point3f[] points (
            interpolation = "vertex"
        )
        point3f[] points.timeSamples = {
            4: [(0.7595265, -0.1819877, 0), (0.7595265, -0.1819877, 0), (0.7595265, -0.1819877, 0), (0.7187941, -0.46188208, 0), (0.3193187, -0.26083633, 0), (0.39816728, -0.7010441, 0), (-0.0013080835, -0.49999833, 0), (0.07754052, -0.94020605, 0), (0.07754052, -0.94020605, 0), (0.07754052, -0.94020605, 0), (0.70039, 0.14816813, 0), (0.70039, 0.14816813, 0), (0.70039, 0.14816813, 0), (0.64743793, -0.21569456, 0), (0.12811993, 0.045664966, 0), (0.2306231, -0.5266051, 0), (-0.2886949, -0.26524562, 0), (-0.18619171, -0.8375157, 0), (-0.18619171, -0.8375157, 0), (-0.18619171, -0.8375157, 0), (0.6773241, 0.5052297, 0), (0.6773241, 0.5052297, 0), (0.6773241, 0.5052297, 0), (0.6084863, 0.032208145, 0), (-0.066627145, 0.3719756, 0), (0.066627055, -0.37197563, 0), (-0.6084864, -0.032208174, 0), (-0.4752322, -0.7761594, 0), (-0.4752322, -0.7761594, 0), (-0.4752322, -0.7761594, 0), (0.7011498, 0.89726865, 0), (0.7011498, 0.89726865, 0), (0.7011498, 0.89726865, 0), (0.6116608, 0.2823407, 0), (-0.2659867, 0.7240383, 0), (-0.092756346, -0.24309827, 0), (-0.9704038, 0.1985994, 0), (-0.7971733, -0.7685371, 0), (-0.7971733, -0.7685371, 0), (-0.7971733, -0.7685371, 0), (0.78593475, 1.3347784, 0), (0.78593475, 1.3347784, 0), (0.78593475, 1.3347784, 0), (0.6695989, 0.53537196, 0), (-0.4713428, 1.1095788, 0), (-0.24614334, -0.14769864, 0), (-1.387085, 0.4265083, 0), (-1.1618855, -0.8307691, 0), (-1.1618855, -0.8307691, 0), (-1.1618855, -0.8307691, 0)],
            5: [(0.6, 0.5, 0), (0.6, 0.5, 0), (0.6, 0.5, 0), (0.8, 0.3, 0), (0.40000004, 0.099999994, 0), (0.8, -0.100000024, 0), (0.40000004, -0.3, 0), (0.8, -0.5, 0), (0.8, -0.5, 0), (0.8, -0.5, 0), (0.3, 0.65, 0), (0.3, 0.65, 0), (0.3, 0.65, 0), (0.56, 0.39000002, 0), (0.04000002, 0.13000003, 0), (0.56, -0.13, 0), (0.04000002, -0.39, 0), (0.56, -0.65, 0), (0.56, -0.65, 0), (0.56, -0.65, 0), (8.5399344e-16, 0.845, 0), (8.5399344e-16, 0.845, 0), (8.5399344e-16, 0.845, 0), (0.33800003, 0.50699997, 0), (-0.33800006, 0.16899994, 0), (0.33800003, -0.16900003, 0), (-0.33800006, -0.5070001, 0), (0.33800003, -0.845, 0), (0.33800003, -0.845, 0), (0.33800003, -0.845, 0), (-0.29999995, 1.0985, 0), (-0.29999995, 1.0985, 0), (-0.29999995, 1.0985, 0), (0.13940006, 0.6591, 0), (-0.7394, 0.21969998, 0), (0.13940006, -0.2197001, 0), (-0.7394, -0.65910006, 0), (0.13940006, -1.0985, 0), (0.13940006, -1.0985, 0), (0.13940006, -1.0985, 0), (-0.6, 1.42805, 0), (-0.6, 1.42805, 0), (-0.6, 1.42805, 0), (-0.028779984, 0.85682994, 0), (-1.1712201, 0.2856099, 0), (-0.028779984, -0.28561014, 0), (-1.1712201, -0.8568301, 0), (-0.028779984, -1.42805, 0), (-0.028779984, -1.42805, 0), (-0.028779984, -1.42805, 0)],
            6: [(-0.042040467, 0.7798927, 0), (-0.042040467, 0.7798927, 0), (-0.042040467, 0.7798927, 0), (0.2378539, 0.82062507, 0), (0.15900531, 0.38041732, 0), (0.55848074, 0.5814631, 0), (0.4796321, 0.14125532, 0), (0.8791075, 0.3423011, 0), (0.8791075, 0.3423011, 0), (0.8791075, 0.3423011, 0), (-0.341647, 0.6291083, 0), (-0.341647, 0.6291083, 0), (-0.341647, 0.6291083, 0), (0.022215664, 0.6820605, 0), (-0.08028751, 0.109790355, 0), (0.4390305, 0.37114987, 0), (0.33652732, -0.20112024, 0), (0.85584533, 0.060239285, 0), (0.85584533, 0.060239285, 0), (0.85584533, 0.060239285, 0), (-0.6773241, 0.5052297, 0), (-0.6773241, 0.5052297, 0), (-0.6773241, 0.5052297, 0), (-0.20430252, 0.5740675, 0), (-0.3375567, -0.16988379, 0), (0.33755675, 0.1698837, 0), (0.2043026, -0.5740676, 0), (0.879416, -0.23430005, 0), (0.879416, -0.23430005, 0), (0.879416, -0.23430005, 0), (-1.0598928, 0.41632855, 0), (-1.0598928, 0.41632855, 0), (-1.0598928, 0.41632855, 0), (-0.44496483, 0.50581765, 0), (-0.6181952, -0.4613189, 0), (0.25945234, -0.019621298, 0), (0.086221844, -0.9867578, 0), (0.9638693, -0.5450601, 0), (0.9638693, -0.5450601, 0), (0.9638693, -0.5450601, 0), (-1.5034208, 0.372898, 0), (-1.5034208, 0.372898, 0), (-1.5034208, 0.372898, 0), (-0.70401424, 0.4892338, 0), (-0.92921376, -0.76804376, 0), (0.21172795, -0.19383681, 0), (-0.013471544, -1.4511143, 0), (1.12747, -0.8769073, 0), (1.12747, -0.8769073, 0), (1.12747, -0.8769073, 0)],
        }
        color3f[] primvars:displayColor (
            interpolation = "vertex"
        )
        color3f[] primvars:displayColor.timeSamples = {
            4: [(1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0)],
            5: [(1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0)],
            6: [(1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0)],
        }
        int[] primvars:displayColor:indices = None
        uniform token type = "cubic"
        float[] widths (
            interpolation = "vertex"
        )
        float[] widths.timeSamples = {
            4: [0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05],
            5: [0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05],
            6: [0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05],
        }
        uniform token wrap = "nonperiodic"
    }
}

def Xform "curves_velocity" (
    prepend apiSchemas = ["MaterialBindingAPI"]
    kind = "component"
)
{
    rel material:binding = </materials/usdpreviewsurface1>
    matrix4d xformOp:transform:xform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 4, 0, 1) )
    uniform token[] xformOpOrder = ["xformOp:transform:xform"]

    def BasisCurves "curve_0" (
        prepend apiSchemas = ["MaterialBindingAPI"]
    )
    {
        uniform token basis = "bspline"
        int[] curveVertexCounts = [10, 10, 10, 10, 10]
        float3[] extent = [(-0.8, -1.42805, 0), (1.1712201, 1.42805, 0)]
        rel material:binding = </materials/usdpreviewsurface1>
        point3f[] points = [(-0.6, -0.5, 0), (-0.6, -0.5, 0), (-0.6, -0.5, 0), (-0.8, -0.3, 0), (-0.40000004, -0.099999994, 0), (-0.8, 0.100000024, 0), (-0.40000004, 0.3, 0), (-0.8, 0.5, 0), (-0.8, 0.5, 0), (-0.8, 0.5, 0), (-0.3, -0.65, 0), (-0.3, -0.65, 0), (-0.3, -0.65, 0), (-0.56, -0.39000002, 0), (-0.04000002, -0.13000003, 0), (-0.56, 0.13, 0), (-0.04000002, 0.39, 0), (-0.56, 0.65, 0), (-0.56, 0.65, 0), (-0.56, 0.65, 0), (0, -0.845, 0), (0, -0.845, 0), (0, -0.845, 0), (-0.33800003, -0.50699997, 0), (0.33800006, -0.16899994, 0), (-0.33800003, 0.16900003, 0), (0.33800006, 0.5070001, 0), (-0.33800003, 0.845, 0), (-0.33800003, 0.845, 0), (-0.33800003, 0.845, 0), (0.29999995, -1.0985, 0), (0.29999995, -1.0985, 0), (0.29999995, -1.0985, 0), (-0.13940006, -0.6591, 0), (0.7394, -0.21969998, 0), (-0.13940006, 0.2197001, 0), (0.7394, 0.65910006, 0), (-0.13940006, 1.0985, 0), (-0.13940006, 1.0985, 0), (-0.13940006, 1.0985, 0), (0.6, -1.42805, 0), (0.6, -1.42805, 0), (0.6, -1.42805, 0), (0.028779984, -0.85682994, 0), (1.1712201, -0.2856099, 0), (0.028779984, 0.28561014, 0), (1.1712201, 0.8568301, 0), (0.028779984, 1.42805, 0), (0.028779984, 1.42805, 0), (0.028779984, 1.42805, 0)] (
            interpolation = "vertex"
        )
        color3f[] primvars:displayColor = [(0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0)] (
            interpolation = "vertex"
        )
        int[] primvars:displayColor:indices = None
        uniform token type = "cubic"
        vector3f[] velocities
            interpolation = "vertex"
        )
        float[] widths = [0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05] (
            interpolation = "vertex"
        )
        uniform token wrap = "nonperiodic"
    }
}

def Xform "curves_acceleration" (
    prepend apiSchemas = ["MaterialBindingAPI"]
    kind = "component"
)
{
    rel material:binding = </materials/usdpreviewsurface1>
    matrix4d xformOp:transform:xform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 1, 0, 1) )
    uniform token[] xformOpOrder = ["xformOp:transform:xform"]

    def BasisCurves "curve_0" (
        prepend apiSchemas = ["MaterialBindingAPI"]
    )
    {
        vector3f[] accelerations = [(0, 2500, 0), (0, 2500, 0), (0, 2500, 0), (0, 2500, 0), (0, 2500, 0), (0, 2500, 0), (0, 2500, 0), (0, 2500, 0), (0, 2500, 0), (0, 2500, 0), (0, 2500, 0), (0, 2500, 0), (0, 2500, 0), (0, 2500, 0), (0, 2500, 0), (0, 2500, 0), (0, 2500, 0), (0, 2500, 0), (0, 2500, 0), (0, 2500, 0), (0, 2500, 0), (0, 2500, 0), (0, 2500, 0), (0, 2500, 0), (0, 2500, 0), (0, 2500, 0), (0, 2500, 0), (0, 2500, 0), (0, 2500, 0), (0, 2500, 0), (0, 2500, 0), (0, 2500, 0), (0, 2500, 0), (0, 2500, 0), (0, 2500, 0), (0, 2500, 0), (0, 2500, 0), (0, 2500, 0), (0, 2500, 0), (0, 2500, 0), (0, 2500, 0), (0, 2500, 0), (0, 2500, 0), (0, 2500, 0), (0, 2500, 0), (0, 2500, 0), (0, 2500, 0), (0, 2500, 0), (0, 2500, 0), (0, 2500, 0)] (
            interpolation = "vertex"
        )
        uniform token basis = "bspline"
        int[] curveVertexCounts = [10, 10, 10, 10, 10]
        float3[] extent = [(-0.8, -1.42805, 0), (1.1712201, 1.42805, 0)]
        rel material:binding = </materials/usdpreviewsurface1>
        point3f[] points = [(-0.6, -0.5, 0), (-0.6, -0.5, 0), (-0.6, -0.5, 0), (-0.8, -0.3, 0), (-0.40000004, -0.099999994, 0), (-0.8, 0.100000024, 0), (-0.40000004, 0.3, 0), (-0.8, 0.5, 0), (-0.8, 0.5, 0), (-0.8, 0.5, 0), (-0.3, -0.65, 0), (-0.3, -0.65, 0), (-0.3, -0.65, 0), (-0.56, -0.39000002, 0), (-0.04000002, -0.13000003, 0), (-0.56, 0.13, 0), (-0.04000002, 0.39, 0), (-0.56, 0.65, 0), (-0.56, 0.65, 0), (-0.56, 0.65, 0), (0, -0.845, 0), (0, -0.845, 0), (0, -0.845, 0), (-0.33800003, -0.50699997, 0), (0.33800006, -0.16899994, 0), (-0.33800003, 0.16900003, 0), (0.33800006, 0.5070001, 0), (-0.33800003, 0.845, 0), (-0.33800003, 0.845, 0), (-0.33800003, 0.845, 0), (0.29999995, -1.0985, 0), (0.29999995, -1.0985, 0), (0.29999995, -1.0985, 0), (-0.13940006, -0.6591, 0), (0.7394, -0.21969998, 0), (-0.13940006, 0.2197001, 0), (0.7394, 0.65910006, 0), (-0.13940006, 1.0985, 0), (-0.13940006, 1.0985, 0), (-0.13940006, 1.0985, 0), (0.6, -1.42805, 0), (0.6, -1.42805, 0), (0.6, -1.42805, 0), (0.028779984, -0.85682994, 0), (1.1712201, -0.2856099, 0), (0.028779984, 0.28561014, 0), (1.1712201, 0.8568301, 0), (0.028779984, 1.42805, 0), (0.028779984, 1.42805, 0), (0.028779984, 1.42805, 0)] (
            interpolation = "vertex"
        )
        color3f[] primvars:displayColor = [(0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1)] (
            interpolation = "vertex"
        )
        int[] primvars:displayColor:indices = None
        uniform token type = "cubic"
        vector3f[] velocities
            interpolation = "vertex"
        )
        float[] widths = [0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05] (
            interpolation = "vertex"
        )
        uniform token wrap = "nonperiodic"
    }
}

def Xform "curves_hermite" (
    prepend apiSchemas = ["MaterialBindingAPI"]
    kind = "component"
)
{
    rel material:binding = </materials/usdpreviewsurface1>
    matrix4d xformOp:transform:xform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, -2, 0, 1) )
    uniform token[] xformOpOrder = ["xformOp:transform:xform"]

    def BasisCurves "curve_0" (
        prepend apiSchemas = ["MaterialBindingAPI"]
    )
    {
        uniform token basis = "bspline"
        int[] curveVertexCounts.timeSamples = {
            5: [10, 10, 10, 10, 10],
        }
        float3[] extent.timeSamples = {
            4: [(-1.387085, -0.94020605, 0), (0.78593475, 1.3347784, 0)],
            5: [(-1.1712201, -1.42805, 0), (0.8, 1.42805, 0)],
            6: [(-1.5034208, -1.4511143, 0), (1.12747, 0.82062507, 0)],
        }
        rel material:binding = </materials/usdpreviewsurface1>
        point3f[] points (
            interpolation = "vertex"
        )
        point3f[] points.timeSamples = {
            4: [(0.7595265, -0.1819877, 0), (0.7595265, -0.1819877, 0), (0.7595265, -0.1819877, 0), (0.7187941, -0.46188208, 0), (0.3193187, -0.26083633, 0), (0.39816728, -0.7010441, 0), (-0.0013080835, -0.49999833, 0), (0.07754052, -0.94020605, 0), (0.07754052, -0.94020605, 0), (0.07754052, -0.94020605, 0), (0.70039, 0.14816813, 0), (0.70039, 0.14816813, 0), (0.70039, 0.14816813, 0), (0.64743793, -0.21569456, 0), (0.12811993, 0.045664966, 0), (0.2306231, -0.5266051, 0), (-0.2886949, -0.26524562, 0), (-0.18619171, -0.8375157, 0), (-0.18619171, -0.8375157, 0), (-0.18619171, -0.8375157, 0), (0.6773241, 0.5052297, 0), (0.6773241, 0.5052297, 0), (0.6773241, 0.5052297, 0), (0.6084863, 0.032208145, 0), (-0.066627145, 0.3719756, 0), (0.066627055, -0.37197563, 0), (-0.6084864, -0.032208174, 0), (-0.4752322, -0.7761594, 0), (-0.4752322, -0.7761594, 0), (-0.4752322, -0.7761594, 0), (0.7011498, 0.89726865, 0), (0.7011498, 0.89726865, 0), (0.7011498, 0.89726865, 0), (0.6116608, 0.2823407, 0), (-0.2659867, 0.7240383, 0), (-0.092756346, -0.24309827, 0), (-0.9704038, 0.1985994, 0), (-0.7971733, -0.7685371, 0), (-0.7971733, -0.7685371, 0), (-0.7971733, -0.7685371, 0), (0.78593475, 1.3347784, 0), (0.78593475, 1.3347784, 0), (0.78593475, 1.3347784, 0), (0.6695989, 0.53537196, 0), (-0.4713428, 1.1095788, 0), (-0.24614334, -0.14769864, 0), (-1.387085, 0.4265083, 0), (-1.1618855, -0.8307691, 0), (-1.1618855, -0.8307691, 0), (-1.1618855, -0.8307691, 0)],
            5: [(0.6, 0.5, 0), (0.6, 0.5, 0), (0.6, 0.5, 0), (0.8, 0.3, 0), (0.40000004, 0.099999994, 0), (0.8, -0.100000024, 0), (0.40000004, -0.3, 0), (0.8, -0.5, 0), (0.8, -0.5, 0), (0.8, -0.5, 0), (0.3, 0.65, 0), (0.3, 0.65, 0), (0.3, 0.65, 0), (0.56, 0.39000002, 0), (0.04000002, 0.13000003, 0), (0.56, -0.13, 0), (0.04000002, -0.39, 0), (0.56, -0.65, 0), (0.56, -0.65, 0), (0.56, -0.65, 0), (8.5399344e-16, 0.845, 0), (8.5399344e-16, 0.845, 0), (8.5399344e-16, 0.845, 0), (0.33800003, 0.50699997, 0), (-0.33800006, 0.16899994, 0), (0.33800003, -0.16900003, 0), (-0.33800006, -0.5070001, 0), (0.33800003, -0.845, 0), (0.33800003, -0.845, 0), (0.33800003, -0.845, 0), (-0.29999995, 1.0985, 0), (-0.29999995, 1.0985, 0), (-0.29999995, 1.0985, 0), (0.13940006, 0.6591, 0), (-0.7394, 0.21969998, 0), (0.13940006, -0.2197001, 0), (-0.7394, -0.65910006, 0), (0.13940006, -1.0985, 0), (0.13940006, -1.0985, 0), (0.13940006, -1.0985, 0), (-0.6, 1.42805, 0), (-0.6, 1.42805, 0), (-0.6, 1.42805, 0), (-0.028779984, 0.85682994, 0), (-1.1712201, 0.2856099, 0), (-0.028779984, -0.28561014, 0), (-1.1712201, -0.8568301, 0), (-0.028779984, -1.42805, 0), (-0.028779984, -1.42805, 0), (-0.028779984, -1.42805, 0)],
            6: [(-0.042040467, 0.7798927, 0), (-0.042040467, 0.7798927, 0), (-0.042040467, 0.7798927, 0), (0.2378539, 0.82062507, 0), (0.15900531, 0.38041732, 0), (0.55848074, 0.5814631, 0), (0.4796321, 0.14125532, 0), (0.8791075, 0.3423011, 0), (0.8791075, 0.3423011, 0), (0.8791075, 0.3423011, 0), (-0.341647, 0.6291083, 0), (-0.341647, 0.6291083, 0), (-0.341647, 0.6291083, 0), (0.022215664, 0.6820605, 0), (-0.08028751, 0.109790355, 0), (0.4390305, 0.37114987, 0), (0.33652732, -0.20112024, 0), (0.85584533, 0.060239285, 0), (0.85584533, 0.060239285, 0), (0.85584533, 0.060239285, 0), (-0.6773241, 0.5052297, 0), (-0.6773241, 0.5052297, 0), (-0.6773241, 0.5052297, 0), (-0.20430252, 0.5740675, 0), (-0.3375567, -0.16988379, 0), (0.33755675, 0.1698837, 0), (0.2043026, -0.5740676, 0), (0.879416, -0.23430005, 0), (0.879416, -0.23430005, 0), (0.879416, -0.23430005, 0), (-1.0598928, 0.41632855, 0), (-1.0598928, 0.41632855, 0), (-1.0598928, 0.41632855, 0), (-0.44496483, 0.50581765, 0), (-0.6181952, -0.4613189, 0), (0.25945234, -0.019621298, 0), (0.086221844, -0.9867578, 0), (0.9638693, -0.5450601, 0), (0.9638693, -0.5450601, 0), (0.9638693, -0.5450601, 0), (-1.5034208, 0.372898, 0), (-1.5034208, 0.372898, 0), (-1.5034208, 0.372898, 0), (-0.70401424, 0.4892338, 0), (-0.92921376, -0.76804376, 0), (0.21172795, -0.19383681, 0), (-0.013471544, -1.4511143, 0), (1.12747, -0.8769073, 0), (1.12747, -0.8769073, 0), (1.12747, -0.8769073, 0)],
        }
        color3f[] primvars:displayColor (
            interpolation = "vertex"
        )
        color3f[] primvars:displayColor.timeSamples = {
            4: [(1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1)],
            5: [(1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1)],
            6: [(1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1)],
        }
        int[] primvars:displayColor:indices = None
        uniform token type = "cubic"
        vector3f[] velocities (
            interpolation = "vertex"
        )
        vector3f[] velocities.timeSamples = {



        }
        float[] widths (
            interpolation = "vertex"
        )
        float[] widths.timeSamples = {
            4: [0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05],
            5: [0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05],
            6: [0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05],
        }
        uniform token wrap = "nonperiodic"
    }
}

def Xform "points_node_xform" (
    prepend apiSchemas = ["MaterialBindingAPI"]
    kind = "component"
)
{
    rel material:binding = </materials/usdpreviewsurface1>
    matrix4d xformOp:transform:xform.timeSamples = {
        4: ( (-0.5979049830575189, 0.8015669848708765, 0, 0), (-0.8015669848708765, -0.5979049830575189, 0, 0), (0, 0, 1, 0), (7, 10, 0, 1) ),
        5: ( (-1, 1.0106430996148606e-15, 0, 0), (-1.0106430996148606e-15, -1, 0, 0), (0, 0, 1, 0), (7, 10, 0, 1) ),
        6: ( (-0.597904983057519, -0.8015669848708764, 0, 0), (0.8015669848708764, -0.597904983057519, 0, 0), (0, 0, 1, 0), (7, 10, 0, 1) ),
    }
    uniform token[] xformOpOrder = ["xformOp:transform:xform"]

    def Points "points_0" (
        prepend apiSchemas = ["MaterialBindingAPI"]
    )
    {
        float3[] extent = [(-1.2230003, -1.2212715, -1.2351003), (1.2195488, 1.2231666, 1.2131449)]
        rel material:binding = </materials/usdpreviewsurface1>
        point3f[] points = [(0.38730398, -0.887907, -0.7824701), (0.37888435, -0.56501573, -1.0314239), (-0.5264995, 1.099362, -0.24288183), (-0.89442015, -0.60337454, -0.61199725), (0.6784591, 0.84571725, 0.6030266), (-0.18982011, 1.0898279, -0.57317907), (0.03910296, -0.4077332, -1.1673785), (1.2195488, -0.10140892, -0.129891), (0.21425371, -0.30852768, 1.1811745), (-0.53159976, -0.80699706, -0.7703964), (-0.8131267, 0.061006084, -0.9281401), (-0.85945463, -0.6375627, 0.6272771), (0.5676166, -0.6398412, 0.90304875), (0.9633478, 0.5041866, 0.58908117), (0.21736181, 0.5633274, -1.0794611), (-0.4674736, 0.78629863, -0.8352455), (-0.07344386, -0.7496252, -0.97723436), (0.6265905, -0.17092133, 1.0531905), (0.090323724, -1.15859, -0.42948803), (-0.16568753, 0.99070287, 0.7228605), (0.6842804, 0.82939047, -0.61584353), (-0.75183094, -0.35732242, -0.91448784), (0.9354176, 0.07855371, 0.79988), (-1.0820671, -0.2209806, -0.5507492), (-0.09925218, 0.31763378, -1.1951159), (-1.0978217, 0.31550676, 0.4804732), (-1.1410375, 0.45612627, 0.08692572), (1.2097702, 0.28655407, -0.019021558), (0.07642955, -0.0367453, -1.2351003), (-0.800103, -0.8933495, -0.32635885), (-0.536653, -0.4930464, 0.99806476), (-0.47654638, 0.29836047, 1.1018707), (0.5413873, -1.0381134, -0.4066183), (0.2610739, 0.95212656, 0.7449432), (-0.50729084, 1.0289611, 0.47047934), (0.9549142, -0.64666396, 0.456157), (-0.8693383, 0.30830246, 0.83673525), (1.0148087, 0.6760756, 0.216717), (0.42512953, 0.16435228, 1.142101), (-0.37835386, -0.47216675, -1.0729157), (1.0879006, -0.1630946, -0.5564098), (-0.85347986, 0.54277766, -0.70623016), (-0.4129736, -0.053723045, -1.162766), (-0.6860053, 0.89717966, -0.51727563), (0.023971472, 0.25597012, 1.2131449), (1.0872693, -0.18571086, 0.55021995), (-1.0458416, -0.14701003, 0.6412946), (0.50007874, -0.15773255, -1.1119913), (0.46636364, 1.1240997, -0.2333361), (-0.94938254, 0.76473886, -0.19691095), (0.5093538, 0.2418612, -1.0962636), (1.1624988, 0.1986321, 0.36419272), (-1.214922, -0.014580868, 0.25186366), (0.8784175, -0.046430647, -0.8804387), (-1.2230003, -0.054916877, -0.15016614), (0.88275, 0.4068124, -0.7598066), (-1.1283305, -0.4331435, 0.2557554), (0.7628695, -0.49066153, -0.8369962), (-0.123398274, 0.66837245, 1.0330051), (0.84485775, -0.75175035, -0.5036011), (-0.75594825, -0.13876154, 0.95922184), (-0.9071001, 0.7040292, 0.4575504), (1.1130116, 0.2742014, -0.45789015), (-1.0561051, 0.17282727, -0.6223836), (0.38356853, 0.6170585, 1.0063504), (1.0558537, 0.6175447, -0.22609578), (0.8650891, -0.38702786, 0.7961693), (-0.5206652, 0.3977914, -1.0470287), (-0.9182125, -0.80834746, 0.1795015), (-0.6017659, 0.6984128, 0.8206797), (1.1844832, -0.29492894, 0.20272017), (1.0975087, -0.48316503, -0.30717826), (-1.1355951, 0.3858696, -0.31964043), (-0.2708108, -0.12072963, 1.1984526), (-1.0926381, -0.53914714, -0.19334997), (-0.07163029, -0.62138045, 1.0746007), (-0.09568428, 0.765152, -0.9623923), (1.0013137, -0.72745866, 0.019739542), (-0.37541258, -0.86117077, 0.81172544), (0.54648, 0.6423165, -0.9168939), (0.63264275, -0.9475972, 0.4798095), (0.35360166, 1.148712, 0.29685748), (-0.21501781, -1.2212715, 0.024279922), (0.7243833, 0.9917474, 0.14378133), (0.233415, -0.8965498, 0.83412576), (0.25294498, 0.99740624, -0.6849852), (-0.54499644, -1.0264542, 0.42666113), (-0.7684705, 0.958933, 0.13373494), (-0.09053223, -0.9983117, -0.72283894), (-0.046014287, 1.201273, 0.33227536), (-0.62768734, -1.0799967, 0.0046815393), (0.8331876, 0.882239, -0.2817154), (0.7319333, 0.4006585, 0.9073235), (0.6863256, -1.0345441, 0.009214027), (-0.1070535, -1.108712, 0.54770154), (-0.3964872, -1.1012977, -0.42020312), (0.06385075, 1.2231666, -0.1922773), (0.23966102, -1.2174228, -0.059149053), (-0.3223462, 1.2055982, 0.042117383), (0.25062457, -1.1616032, 0.3501846)] (
            interpolation = "vertex"
        )
        color3f[] primvars:displayColor = [(1, 1, 0), (1, 1, 0), (1, 1, 0), (1, 1, 0), (1, 1, 0), (1, 1, 0), (1, 1, 0), (1, 1, 0), (1, 1, 0), (1, 1, 0), (1, 1, 0), (1, 1, 0), (1, 1, 0), (1, 1, 0), (1, 1, 0), (1, 1, 0), (1, 1, 0), (1, 1, 0), (1, 1, 0), (1, 1, 0), (1, 1, 0), (1, 1, 0), (1, 1, 0), (1, 1, 0), (1, 1, 0), (1, 1, 0), (1, 1, 0), (1, 1, 0), (1, 1, 0), (1, 1, 0), (1, 1, 0), (1, 1, 0), (1, 1, 0), (1, 1, 0), (1, 1, 0), (1, 1, 0), (1, 1, 0), (1, 1, 0), (1, 1, 0), (1, 1, 0), (1, 1, 0), (1, 1, 0), (1, 1, 0), (1, 1, 0), (1, 1, 0), (1, 1, 0), (1, 1, 0), (1, 1, 0), (1, 1, 0), (1, 1, 0), (1, 1, 0), (1, 1, 0), (1, 1, 0), (1, 1, 0), (1, 1, 0), (1, 1, 0), (1, 1, 0), (1, 1, 0), (1, 1, 0), (1, 1, 0), (1, 1, 0), (1, 1, 0), (1, 1, 0), (1, 1, 0), (1, 1, 0), (1, 1, 0), (1, 1, 0), (1, 1, 0), (1, 1, 0), (1, 1, 0), (1, 1, 0), (1, 1, 0), (1, 1, 0), (1, 1, 0), (1, 1, 0), (1, 1, 0), (1, 1, 0), (1, 1, 0), (1, 1, 0), (1, 1, 0), (1, 1, 0), (1, 1, 0), (1, 1, 0), (1, 1, 0), (1, 1, 0), (1, 1, 0), (1, 1, 0), (1, 1, 0), (1, 1, 0), (1, 1, 0), (1, 1, 0), (1, 1, 0), (1, 1, 0), (1, 1, 0), (1, 1, 0), (1, 1, 0), (1, 1, 0), (1, 1, 0), (1, 1, 0), (1, 1, 0)] (
            interpolation = "vertex"
        )
        int[] primvars:displayColor:indices = None
        float[] widths = [0.04172318, 0.00029251576, 0.081343226, 0.026238048, 0.00022482872, 0.018949378, 0.011619652, 0.06177759, 0.091621116, 0.05199168, 0.009368181, 0.0119826915, 0.09744946, 0.09223701, 0.01491077, 0.00862304, 0.08047523, 0.086910784, 0.08762624, 0.002495134, 0.074814476, 0.03745625, 0.0169585, 0.035533644, 0.067235015, 0.09425061, 0.060025204, 0.039106797, 0.08550682, 0.005255854, 0.09929136, 0.0722306, 0.09501713, 0.093023956, 0.05721128, 0.09952482, 0.021738088, 0.09381942, 0.033784438, 0.09948045, 0.028117776, 0.021284902, 0.079645276, 0.03431281, 0.0582495, 0.086238384, 0.08141068, 0.016465975, 0.06494167, 0.039164163, 0.03589337, 0.030209256, 0.09353763, 0.09642974, 0.07435914, 0.0696752, 0.08771876, 0.044762373, 0.014282644, 0.007970464, 0.053426113, 0.00040833952, 0.0036474944, 0.08283776, 0.011082137, 0.04308448, 0.02185439, 0.012870312, 0.07063519, 0.06552845, 0.058672618, 0.0024151087, 0.07420248, 0.08690079, 0.038192857, 0.08617926, 0.08544312, 0.06783936, 0.07528448, 0.051347066, 0.03206375, 0.06306287, 0.057547808, 0.00009969473, 0.00777086, 0.040565707, 0.03948797, 0.026823176, 0.065427996, 0.06638756, 0.0012147427, 0.047290124, 0.07486918, 0.081005454, 0.05057571, 0.07140004, 0.03447945, 0.098138504, 0.053005993, 0.07432371] (
            interpolation = "vertex"
        )
    }
}

def Xform "points_frame_delta" (
    prepend apiSchemas = ["MaterialBindingAPI"]
    kind = "component"
)
{
    rel material:binding = </materials/usdpreviewsurface1>
    matrix4d xformOp:transform:xform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (7, 7, 0, 1) )
    uniform token[] xformOpOrder = ["xformOp:transform:xform"]

    def Points "points_0" (
        prepend apiSchemas = ["MaterialBindingAPI"]
    )
    {
        float3[] extent.timeSamples = {
            4: [(-1.2280643, -1.2182348, -1.2351003), (1.2409871, 1.2375711, 1.2131449)],
            5: [(-1.2195488, -1.2231666, -1.2351003), (1.2230003, 1.2212715, 1.2131449)],
            6: [(-1.2396139, -1.217666, -1.2351003), (1.2281213, 1.2193238, 1.2131449)],
        }
        rel material:binding = </materials/usdpreviewsurface1>
        point3f[] points (
            interpolation = "vertex"
        )
        point3f[] points.timeSamples = {
            4: [(0.480146, 0.8413341, -0.7824701), (0.2263611, 0.6415269, -1.0314239), (-0.5664156, -1.0793386, -0.24288183), (1.0184233, -0.35617703, -0.61199725), (-1.0835531, 0.038171828, 0.6030266), (-0.7600756, -0.8037671, -0.57317907), (0.3034456, 0.27512935, -1.1673785), (-0.6478883, 1.038183, -0.129891), (0.11920223, 0.35620892, 1.1811745), (0.9647083, 0.056394756, -0.7703964), (0.43727204, -0.6882513, -0.9281401), (1.0249214, -0.3077085, 0.6272771), (0.17349479, 0.83754694, 0.90304875), (-0.9801297, 0.47073212, 0.58908117), (-0.5815063, -0.16258621, -1.0794611), (-0.3507662, -0.84484327, -0.8352455), (0.64478725, 0.38933447, -0.97723436), (-0.23763669, 0.604449, 1.0531905), (0.8746824, 0.76512724, -0.42948803), (-0.6950493, -0.72515583, 0.7228605), (-1.0739466, 0.052599847, -0.61584353), (0.7359413, -0.38899797, -0.91448784), (-0.6222569, 0.7028322, 0.79988), (0.8241041, -0.7352239, -0.5507492), (-0.19526136, -0.2694721, -1.1951159), (0.40349326, -1.0686207, 0.4804732), (0.3166162, -1.1873381, 0.08692572), (-0.9530199, 0.7983797, -0.019021558), (-0.016243793, 0.0832336, -1.2351003), (1.194465, -0.107198, -0.32635885), (0.7160772, -0.1353684, 0.99806476), (0.045773566, -0.56037503, 1.1018707), (0.5084192, 1.0546513, -0.4066183), (-0.91929054, -0.360013, 0.7449432), (-0.5214695, -1.0218486, 0.47047934), (-0.052603483, 1.1520714, 0.456157), (0.27265662, -0.8811684, 0.83673525), (-1.148679, 0.40920815, 0.216717), (-0.38592643, 0.24250275, 1.142101), (0.60469294, -0.0209651, -1.0729157), (-0.51973, 0.96954024, -0.5564098), (0.07522723, -1.0086508, -0.70623016), (0.2899816, -0.29890472, -1.162766), (-0.3089836, -1.0863074, -0.51727563), (-0.21950985, -0.13383107, 1.2131449), (-0.50122404, 0.9825566, 0.55021995), (0.74315226, -0.750414, 0.6412946), (-0.17256638, 0.4951557, -1.1119913), (-1.1798823, -0.29828316, -0.2333361), (-0.045348883, -1.2182348, -0.19691095), (-0.49841315, 0.26367116, -1.0962636), (-0.85428077, 0.8130575, 0.36419272), (0.7380954, -0.96512336, 0.25186366), (-0.48799294, 0.73187155, -0.8804387), (0.7752575, -0.9474816, -0.15016614), (-0.85388803, 0.46434802, -0.7598066), (1.0218279, -0.64545375, 0.2557554), (-0.06282541, 0.9048599, -0.8369962), (-0.46196482, -0.4985352, 1.0330051), (0.09743357, 1.1266854, -0.5036011), (0.56321186, -0.52297693, 0.95922184), (-0.021966875, -1.148044, 0.4575504), (-0.88526595, 0.72820693, -0.45789015), (0.4929179, -0.94987327, -0.6223836), (-0.7239512, -0.061486483, 1.0063504), (-1.1263037, 0.47710437, -0.22609578), (-0.20701239, 0.9248327, 0.7961693), (-0.007548094, -0.6551895, -1.0470287), (1.1969485, -0.2526938, 0.1795015), (-0.20002577, -0.89994013, 0.8206797), (-0.47180307, 1.125782, 0.20272017), (-0.2689168, 1.1686134, -0.30717826), (0.36967766, -1.1409688, -0.31964043), (0.25869203, -0.14488815, 1.1984526), (1.0854564, -0.5534638, -0.19334997), (0.54090613, 0.31410998, 1.0746007), (-0.55611044, -0.5341855, -0.9623923), (-0.015583634, 1.2375711, 0.019739542), (0.9147471, 0.21397999, 0.81172544), (-0.8416028, 0.053996056, -0.9168939), (0.38130236, 1.0736786, 0.4798095), (-1.1321899, -0.40338522, 0.29685748), (1.1074911, 0.55785316, 0.024279922), (-1.2280643, -0.012328982, 0.14378133), (0.57908475, 0.72314936, 0.83412576), (-0.95072496, -0.39360183, -0.6849852), (1.1486279, 0.17687094, 0.42666113), (-0.30917662, -1.1893313, 0.13373494), (0.85434335, 0.5243279, -0.72283894), (-0.9353885, -0.75513065, 0.33227536), (1.2409871, 0.14260197, 0.0046815393), (-1.2053406, 0.14036053, -0.2817154), (-0.7587812, 0.3471378, 0.9073235), (0.41889885, 1.168695, 0.009214027), (0.9527147, 0.57709384, 0.54770154), (1.1198256, 0.34066036, -0.42020312), (-1.0186266, -0.6801567, -0.1922773), (0.8325514, 0.9200075, -0.059149053), (-0.7736353, -0.97921526, 0.042117383), (0.7812531, 0.89542073, 0.3501846)],
            5: [(-0.38730398, 0.887907, -0.7824701), (-0.37888435, 0.56501573, -1.0314239), (0.5264995, -1.099362, -0.24288183), (0.89442015, 0.60337454, -0.61199725), (-0.6784591, -0.84571725, 0.6030266), (0.18982011, -1.0898279, -0.57317907), (-0.03910296, 0.4077332, -1.1673785), (-1.2195488, 0.10140892, -0.129891), (-0.21425371, 0.30852768, 1.1811745), (0.53159976, 0.80699706, -0.7703964), (0.8131267, -0.061006084, -0.9281401), (0.85945463, 0.6375627, 0.6272771), (-0.5676166, 0.6398412, 0.90304875), (-0.9633478, -0.5041866, 0.58908117), (-0.21736181, -0.5633274, -1.0794611), (0.4674736, -0.78629863, -0.8352455), (0.07344386, 0.7496252, -0.97723436), (-0.6265905, 0.17092133, 1.0531905), (-0.090323724, 1.15859, -0.42948803), (0.16568753, -0.99070287, 0.7228605), (-0.6842804, -0.82939047, -0.61584353), (0.75183094, 0.35732242, -0.91448784), (-0.9354176, -0.07855371, 0.79988), (1.0820671, 0.2209806, -0.5507492), (0.09925218, -0.31763378, -1.1951159), (1.0978217, -0.31550676, 0.4804732), (1.1410375, -0.45612627, 0.08692572), (-1.2097702, -0.28655407, -0.019021558), (-0.07642955, 0.0367453, -1.2351003), (0.800103, 0.8933495, -0.32635885), (0.536653, 0.4930464, 0.99806476), (0.47654638, -0.29836047, 1.1018707), (-0.5413873, 1.0381134, -0.4066183), (-0.2610739, -0.95212656, 0.7449432), (0.50729084, -1.0289611, 0.47047934), (-0.9549142, 0.64666396, 0.456157), (0.8693383, -0.30830246, 0.83673525), (-1.0148087, -0.6760756, 0.216717), (-0.42512953, -0.16435228, 1.142101), (0.37835386, 0.47216675, -1.0729157), (-1.0879006, 0.1630946, -0.5564098), (0.85347986, -0.54277766, -0.70623016), (0.4129736, 0.053723045, -1.162766), (0.6860053, -0.89717966, -0.51727563), (-0.023971472, -0.25597012, 1.2131449), (-1.0872693, 0.18571086, 0.55021995), (1.0458416, 0.14701003, 0.6412946), (-0.50007874, 0.15773255, -1.1119913), (-0.46636364, -1.1240997, -0.2333361), (0.94938254, -0.76473886, -0.19691095), (-0.5093538, -0.2418612, -1.0962636), (-1.1624988, -0.1986321, 0.36419272), (1.214922, 0.014580868, 0.25186366), (-0.8784175, 0.046430647, -0.8804387), (1.2230003, 0.054916877, -0.15016614), (-0.88275, -0.4068124, -0.7598066), (1.1283305, 0.4331435, 0.2557554), (-0.7628695, 0.49066153, -0.8369962), (0.123398274, -0.66837245, 1.0330051), (-0.84485775, 0.75175035, -0.5036011), (0.75594825, 0.13876154, 0.95922184), (0.9071001, -0.7040292, 0.4575504), (-1.1130116, -0.2742014, -0.45789015), (1.0561051, -0.17282727, -0.6223836), (-0.38356853, -0.6170585, 1.0063504), (-1.0558537, -0.6175447, -0.22609578), (-0.8650891, 0.38702786, 0.7961693), (0.5206652, -0.3977914, -1.0470287), (0.9182125, 0.80834746, 0.1795015), (0.6017659, -0.6984128, 0.8206797), (-1.1844832, 0.29492894, 0.20272017), (-1.0975087, 0.48316503, -0.30717826), (1.1355951, -0.3858696, -0.31964043), (0.2708108, 0.12072963, 1.1984526), (1.0926381, 0.53914714, -0.19334997), (0.07163029, 0.62138045, 1.0746007), (0.09568428, -0.765152, -0.9623923), (-1.0013137, 0.72745866, 0.019739542), (0.37541258, 0.86117077, 0.81172544), (-0.54648, -0.6423165, -0.9168939), (-0.63264275, 0.9475972, 0.4798095), (-0.35360166, -1.148712, 0.29685748), (0.21501781, 1.2212715, 0.024279922), (-0.7243833, -0.9917474, 0.14378133), (-0.233415, 0.8965498, 0.83412576), (-0.25294498, -0.99740624, -0.6849852), (0.54499644, 1.0264542, 0.42666113), (0.7684705, -0.958933, 0.13373494), (0.09053223, 0.9983117, -0.72283894), (0.046014287, -1.201273, 0.33227536), (0.62768734, 1.0799967, 0.0046815393), (-0.8331876, -0.882239, -0.2817154), (-0.7319333, -0.4006585, 0.9073235), (-0.6863256, 1.0345441, 0.009214027), (0.1070535, 1.108712, 0.54770154), (0.3964872, 1.1012977, -0.42020312), (-0.06385075, -1.2231666, -0.1922773), (-0.23966102, 1.2174228, -0.059149053), (0.3223462, -1.2055982, 0.042117383), (-0.25062457, 1.1616032, 0.3501846)],
            6: [(-0.9432879, 0.22043395, -0.7824701), (-0.6794348, 0.034124553, -1.0314239), (1.1960089, -0.2352894, -0.24288183), (0.051133156, 1.0776982, -0.61199725), (0.27224493, -1.049489, 0.6030266), (0.9870644, -0.49946, -0.57317907), (-0.35020533, 0.21244207, -1.1673785), (-0.8104603, -0.91691715, -0.129891), (-0.37540895, 0.012731537, 1.1811745), (-0.32901606, 0.90862036, -0.7703964), (0.535073, 0.61529964, -0.9281401), (0.0028229952, 1.0701123, 0.6272771), (-0.8522563, -0.07241845, 0.90304875), (-0.17185113, -1.0736434, 0.58908117), (0.3215829, -0.5110463, -1.0794611), (0.90977585, -0.09542048, -0.8352455), (-0.5569623, 0.50707483, -0.97723436), (-0.51164645, -0.40005952, 1.0531905), (-0.9826925, 0.6203262, -0.42948803), (0.89318013, -0.45953655, 0.7228605), (0.2556773, -1.0443933, -0.61584353), (0.1631056, 0.8162877, -0.91448784), (-0.49632478, -0.7967675, 0.79988), (0.46984255, 0.99947464, -0.5507492), (0.3139481, -0.11035755, -1.1951159), (0.9092928, 0.6913345, 0.4804732), (1.0478477, 0.6418978, 0.08692572), (-0.49363536, -1.1410439, -0.019021558), (-0.07515143, -0.039293207, -1.2351003), (-0.2376939, 1.1754743, -0.32635885), (-0.07434222, 0.7249582, 0.99806476), (0.52408534, 0.20359261, 1.1018707), (-1.1558156, 0.18673497, -0.4066183), (0.60709584, -0.77854943, 0.7449432), (1.1280929, -0.2085934, 0.47047934), (-1.0892924, -0.3787841, 0.456157), (0.7669068, 0.51249725, 0.83673525), (-0.0648393, -1.217666, 0.216717), (-0.122447714, -0.43903685, 1.142101), (-0.1522536, 0.5855868, -1.0729157), (-0.7811924, -0.77451015, -0.5564098), (0.94537246, 0.35959178, -0.70623016), (0.20385636, 0.36314726, -1.162766), (1.1293156, 0.01345098, -0.51727563), (0.19084452, -0.17226054, 1.2131449), (-0.7989434, -0.7604817, 0.55021995), (0.5074755, 0.92621005, 0.6412946), (-0.42543277, -0.3065375, -1.1119913), (0.6222001, -1.0459266, -0.2333361), (1.18063, 0.30375248, -0.19691095), (-0.11067726, -0.5528912, -1.0962636), (-0.5358469, -1.0505837, 0.36419272), (0.71472037, 0.98255926, 0.25186366), (-0.56242746, -0.67634934, -0.8804387), (0.68721837, 1.0131518, -0.15016614), (-0.20171323, -0.95081836, -0.7598066), (0.3274409, 1.1634111, 0.2557554), (-0.8494215, -0.318122, -0.8369962), (0.6095257, -0.30071124, 1.0330051), (-1.1077229, -0.22773474, -0.5036011), (0.34075856, 0.68890935, 0.95922184), (1.1066861, 0.30615887, 0.4575504), (-0.44568443, -1.0560997, -0.45789015), (0.7699832, 0.74320465, -0.6223836), (0.2652762, -0.6763982, 1.0063504), (-0.13629678, -1.2155704, -0.22609578), (-0.8274698, -0.46202096, 0.7961693), (0.63016474, 0.1795066, -1.0470287), (-0.09894079, 1.2193238, 0.1795015), (0.9196234, 0.064771146, 0.8206797), (-0.9446137, -0.7731031, 0.20272017), (-1.0434949, -0.5908399, -0.30717826), (0.98827827, 0.6795421, -0.31964043), (0.065146245, 0.28925782, 1.1984526), (0.22113127, 1.1981814, -0.19334997), (-0.45524994, 0.42894292, 1.0746007), (0.6705306, -0.38079083, -0.9623923), (-1.1817973, -0.36766884, 0.019739542), (-0.465825, 0.81581664, 0.81172544), (0.18811655, -0.82208455, -0.9168939), (-1.1378229, 0.059467554, 0.4798095), (0.70934945, -0.97025603, 0.29685748), (-0.85037065, 0.9025555, 0.024279922), (0.36183953, -1.1736124, 0.14378133), (-0.8582047, 0.3489539, 0.83412576), (0.6482508, -0.79910654, -0.6849852), (-0.4969157, 1.0505732, 0.42666113), (1.2281213, 0.04262978, 0.13373494), (-0.74608403, 0.66946316, -0.72283894), (0.9904129, -0.6813636, 0.33227536), (-0.4903923, 1.1488688, 0.0046815393), (0.20900664, -1.1953506, -0.2817154), (-0.116471976, -0.82624924, 0.9073235), (-1.2396139, 0.06842315, 0.009214027), (-0.82469904, 0.7487149, 0.54770154), (-0.6457022, 0.9762825, -0.42020312), (0.94227326, -0.782518, -0.1922773), (-1.1191404, 0.53579885, -0.059149053), (1.1591002, -0.4624511, 0.042117383), (-1.0809524, 0.49363595, 0.3501846)],
        }
        color3f[] primvars:displayColor (
            interpolation = "vertex"
        )
        color3f[] primvars:displayColor.timeSamples = {
            4: [(1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0)],
            5: [(1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0)],
            6: [(1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0)],
        }
        int[] primvars:displayColor:indices = None
        float[] widths (
            interpolation = "vertex"
        )
        float[] widths.timeSamples = {
            4: [0.04172318, 0.00029251576, 0.081343226, 0.026238048, 0.00022482872, 0.018949378, 0.011619652, 0.06177759, 0.091621116, 0.05199168, 0.009368181, 0.0119826915, 0.09744946, 0.09223701, 0.01491077, 0.00862304, 0.08047523, 0.086910784, 0.08762624, 0.002495134, 0.074814476, 0.03745625, 0.0169585, 0.035533644, 0.067235015, 0.09425061, 0.060025204, 0.039106797, 0.08550682, 0.005255854, 0.09929136, 0.0722306, 0.09501713, 0.093023956, 0.05721128, 0.09952482, 0.021738088, 0.09381942, 0.033784438, 0.09948045, 0.028117776, 0.021284902, 0.079645276, 0.03431281, 0.0582495, 0.086238384, 0.08141068, 0.016465975, 0.06494167, 0.039164163, 0.03589337, 0.030209256, 0.09353763, 0.09642974, 0.07435914, 0.0696752, 0.08771876, 0.044762373, 0.014282644, 0.007970464, 0.053426113, 0.00040833952, 0.0036474944, 0.08283776, 0.011082137, 0.04308448, 0.02185439, 0.012870312, 0.07063519, 0.06552845, 0.058672618, 0.0024151087, 0.07420248, 0.08690079, 0.038192857, 0.08617926, 0.08544312, 0.06783936, 0.07528448, 0.051347066, 0.03206375, 0.06306287, 0.057547808, 0.00009969473, 0.00777086, 0.040565707, 0.03948797, 0.026823176, 0.065427996, 0.06638756, 0.0012147427, 0.047290124, 0.07486918, 0.081005454, 0.05057571, 0.07140004, 0.03447945, 0.098138504, 0.053005993, 0.07432371],
            5: [0.04172318, 0.00029251576, 0.081343226, 0.026238048, 0.00022482872, 0.018949378, 0.011619652, 0.06177759, 0.091621116, 0.05199168, 0.009368181, 0.0119826915, 0.09744946, 0.09223701, 0.01491077, 0.00862304, 0.08047523, 0.086910784, 0.08762624, 0.002495134, 0.074814476, 0.03745625, 0.0169585, 0.035533644, 0.067235015, 0.09425061, 0.060025204, 0.039106797, 0.08550682, 0.005255854, 0.09929136, 0.0722306, 0.09501713, 0.093023956, 0.05721128, 0.09952482, 0.021738088, 0.09381942, 0.033784438, 0.09948045, 0.028117776, 0.021284902, 0.079645276, 0.03431281, 0.0582495, 0.086238384, 0.08141068, 0.016465975, 0.06494167, 0.039164163, 0.03589337, 0.030209256, 0.09353763, 0.09642974, 0.07435914, 0.0696752, 0.08771876, 0.044762373, 0.014282644, 0.007970464, 0.053426113, 0.00040833952, 0.0036474944, 0.08283776, 0.011082137, 0.04308448, 0.02185439, 0.012870312, 0.07063519, 0.06552845, 0.058672618, 0.0024151087, 0.07420248, 0.08690079, 0.038192857, 0.08617926, 0.08544312, 0.06783936, 0.07528448, 0.051347066, 0.03206375, 0.06306287, 0.057547808, 0.00009969473, 0.00777086, 0.040565707, 0.03948797, 0.026823176, 0.065427996, 0.06638756, 0.0012147427, 0.047290124, 0.07486918, 0.081005454, 0.05057571, 0.07140004, 0.03447945, 0.098138504, 0.053005993, 0.07432371],
            6: [0.04172318, 0.00029251576, 0.081343226, 0.026238048, 0.00022482872, 0.018949378, 0.011619652, 0.06177759, 0.091621116, 0.05199168, 0.009368181, 0.0119826915, 0.09744946, 0.09223701, 0.01491077, 0.00862304, 0.08047523, 0.086910784, 0.08762624, 0.002495134, 0.074814476, 0.03745625, 0.0169585, 0.035533644, 0.067235015, 0.09425061, 0.060025204, 0.039106797, 0.08550682, 0.005255854, 0.09929136, 0.0722306, 0.09501713, 0.093023956, 0.05721128, 0.09952482, 0.021738088, 0.09381942, 0.033784438, 0.09948045, 0.028117776, 0.021284902, 0.079645276, 0.03431281, 0.0582495, 0.086238384, 0.08141068, 0.016465975, 0.06494167, 0.039164163, 0.03589337, 0.030209256, 0.09353763, 0.09642974, 0.07435914, 0.0696752, 0.08771876, 0.044762373, 0.014282644, 0.007970464, 0.053426113, 0.00040833952, 0.0036474944, 0.08283776, 0.011082137, 0.04308448, 0.02185439, 0.012870312, 0.07063519, 0.06552845, 0.058672618, 0.0024151087, 0.07420248, 0.08690079, 0.038192857, 0.08617926, 0.08544312, 0.06783936, 0.07528448, 0.051347066, 0.03206375, 0.06306287, 0.057547808, 0.00009969473, 0.00777086, 0.040565707, 0.03948797, 0.026823176, 0.065427996, 0.06638756, 0.0012147427, 0.047290124, 0.07486918, 0.081005454, 0.05057571, 0.07140004, 0.03447945, 0.098138504, 0.053005993, 0.07432371],
        }
    }
}

def Xform "points_velocity" (
    prepend apiSchemas = ["MaterialBindingAPI"]
    kind = "component"
)
{
    rel material:binding = </materials/usdpreviewsurface1>
    matrix4d xformOp:transform:xform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (7, 4, 0, 1) )
    uniform token[] xformOpOrder = ["xformOp:transform:xform"]

    def Points "points_0" (
        prepend apiSchemas = ["MaterialBindingAPI"]
    )
    {
        float3[] extent = [(-1.2230003, -1.2212715, -1.2351003), (1.2195488, 1.2231666, 1.2131449)]
        rel material:binding = </materials/usdpreviewsurface1>
        point3f[] points = [(0.38730398, -0.887907, -0.7824701), (0.37888435, -0.56501573, -1.0314239), (-0.5264995, 1.099362, -0.24288183), (-0.89442015, -0.60337454, -0.61199725), (0.6784591, 0.84571725, 0.6030266), (-0.18982011, 1.0898279, -0.57317907), (0.03910296, -0.4077332, -1.1673785), (1.2195488, -0.10140892, -0.129891), (0.21425371, -0.30852768, 1.1811745), (-0.53159976, -0.80699706, -0.7703964), (-0.8131267, 0.061006084, -0.9281401), (-0.85945463, -0.6375627, 0.6272771), (0.5676166, -0.6398412, 0.90304875), (0.9633478, 0.5041866, 0.58908117), (0.21736181, 0.5633274, -1.0794611), (-0.4674736, 0.78629863, -0.8352455), (-0.07344386, -0.7496252, -0.97723436), (0.6265905, -0.17092133, 1.0531905), (0.090323724, -1.15859, -0.42948803), (-0.16568753, 0.99070287, 0.7228605), (0.6842804, 0.82939047, -0.61584353), (-0.75183094, -0.35732242, -0.91448784), (0.9354176, 0.07855371, 0.79988), (-1.0820671, -0.2209806, -0.5507492), (-0.09925218, 0.31763378, -1.1951159), (-1.0978217, 0.31550676, 0.4804732), (-1.1410375, 0.45612627, 0.08692572), (1.2097702, 0.28655407, -0.019021558), (0.07642955, -0.0367453, -1.2351003), (-0.800103, -0.8933495, -0.32635885), (-0.536653, -0.4930464, 0.99806476), (-0.47654638, 0.29836047, 1.1018707), (0.5413873, -1.0381134, -0.4066183), (0.2610739, 0.95212656, 0.7449432), (-0.50729084, 1.0289611, 0.47047934), (0.9549142, -0.64666396, 0.456157), (-0.8693383, 0.30830246, 0.83673525), (1.0148087, 0.6760756, 0.216717), (0.42512953, 0.16435228, 1.142101), (-0.37835386, -0.47216675, -1.0729157), (1.0879006, -0.1630946, -0.5564098), (-0.85347986, 0.54277766, -0.70623016), (-0.4129736, -0.053723045, -1.162766), (-0.6860053, 0.89717966, -0.51727563), (0.023971472, 0.25597012, 1.2131449), (1.0872693, -0.18571086, 0.55021995), (-1.0458416, -0.14701003, 0.6412946), (0.50007874, -0.15773255, -1.1119913), (0.46636364, 1.1240997, -0.2333361), (-0.94938254, 0.76473886, -0.19691095), (0.5093538, 0.2418612, -1.0962636), (1.1624988, 0.1986321, 0.36419272), (-1.214922, -0.014580868, 0.25186366), (0.8784175, -0.046430647, -0.8804387), (-1.2230003, -0.054916877, -0.15016614), (0.88275, 0.4068124, -0.7598066), (-1.1283305, -0.4331435, 0.2557554), (0.7628695, -0.49066153, -0.8369962), (-0.123398274, 0.66837245, 1.0330051), (0.84485775, -0.75175035, -0.5036011), (-0.75594825, -0.13876154, 0.95922184), (-0.9071001, 0.7040292, 0.4575504), (1.1130116, 0.2742014, -0.45789015), (-1.0561051, 0.17282727, -0.6223836), (0.38356853, 0.6170585, 1.0063504), (1.0558537, 0.6175447, -0.22609578), (0.8650891, -0.38702786, 0.7961693), (-0.5206652, 0.3977914, -1.0470287), (-0.9182125, -0.80834746, 0.1795015), (-0.6017659, 0.6984128, 0.8206797), (1.1844832, -0.29492894, 0.20272017), (1.0975087, -0.48316503, -0.30717826), (-1.1355951, 0.3858696, -0.31964043), (-0.2708108, -0.12072963, 1.1984526), (-1.0926381, -0.53914714, -0.19334997), (-0.07163029, -0.62138045, 1.0746007), (-0.09568428, 0.765152, -0.9623923), (1.0013137, -0.72745866, 0.019739542), (-0.37541258, -0.86117077, 0.81172544), (0.54648, 0.6423165, -0.9168939), (0.63264275, -0.9475972, 0.4798095), (0.35360166, 1.148712, 0.29685748), (-0.21501781, -1.2212715, 0.024279922), (0.7243833, 0.9917474, 0.14378133), (0.233415, -0.8965498, 0.83412576), (0.25294498, 0.99740624, -0.6849852), (-0.54499644, -1.0264542, 0.42666113), (-0.7684705, 0.958933, 0.13373494), (-0.09053223, -0.9983117, -0.72283894), (-0.046014287, 1.201273, 0.33227536), (-0.62768734, -1.0799967, 0.0046815393), (0.8331876, 0.882239, -0.2817154), (0.7319333, 0.4006585, 0.9073235), (0.6863256, -1.0345441, 0.009214027), (-0.1070535, -1.108712, 0.54770154), (-0.3964872, -1.1012977, -0.42020312), (0.06385075, 1.2231666, -0.1922773), (0.23966102, -1.2174228, -0.059149053), (-0.3223462, 1.2055982, 0.042117383), (0.25062457, -1.1616032, 0.3501846)] (
            interpolation = "vertex"
        )
        color3f[] primvars:displayColor = [(0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0)] (
            interpolation = "vertex"
        )
        int[] primvars:displayColor:indices = None
        vector3f[] velocities = [(100, 0, 0), (100, 0, 0), (100, 0, 0), (100, 0, 0), (100, 0, 0), (100, 0, 0), (100, 0, 0), (100, 0, 0), (100, 0, 0), (100, 0, 0), (100, 0, 0), (100, 0, 0), (100, 0, 0), (100, 0, 0), (100, 0, 0), (100, 0, 0), (100, 0, 0), (100, 0, 0), (100, 0, 0), (100, 0, 0), (100, 0, 0), (100, 0, 0), (100, 0, 0), (100, 0, 0), (100, 0, 0), (100, 0, 0), (100, 0, 0), (100, 0, 0), (100, 0, 0), (100, 0, 0), (100, 0, 0), (100, 0, 0), (100, 0, 0), (100, 0, 0), (100, 0, 0), (100, 0, 0), (100, 0, 0), (100, 0, 0), (100, 0, 0), (100, 0, 0), (100, 0, 0), (100, 0, 0), (100, 0, 0), (100, 0, 0), (100, 0, 0), (100, 0, 0), (100, 0, 0), (100, 0, 0), (100, 0, 0), (100, 0, 0), (100, 0, 0), (100, 0, 0), (100, 0, 0), (100, 0, 0), (100, 0, 0), (100, 0, 0), (100, 0, 0), (100, 0, 0), (100, 0, 0), (100, 0, 0), (100, 0, 0), (100, 0, 0), (100, 0, 0), (100, 0, 0), (100, 0, 0), (100, 0, 0), (100, 0, 0), (100, 0, 0), (100, 0, 0), (100, 0, 0), (100, 0, 0), (100, 0, 0), (100, 0, 0), (100, 0, 0), (100, 0, 0), (100, 0, 0), (100, 0, 0), (100, 0, 0), (100, 0, 0), (100, 0, 0), (100, 0, 0), (100, 0, 0), (100, 0, 0), (100, 0, 0), (100, 0, 0), (100, 0, 0), (100, 0, 0), (100, 0, 0), (100, 0, 0), (100, 0, 0), (100, 0, 0), (100, 0, 0), (100, 0, 0), (100, 0, 0), (100, 0, 0), (100, 0, 0), (100, 0, 0), (100, 0, 0), (100, 0, 0), (100, 0, 0)] (
            interpolation = "vertex"
        )
        float[] widths = [0.04172318, 0.00029251576, 0.081343226, 0.026238048, 0.00022482872, 0.018949378, 0.011619652, 0.06177759, 0.091621116, 0.05199168, 0.009368181, 0.0119826915, 0.09744946, 0.09223701, 0.01491077, 0.00862304, 0.08047523, 0.086910784, 0.08762624, 0.002495134, 0.074814476, 0.03745625, 0.0169585, 0.035533644, 0.067235015, 0.09425061, 0.060025204, 0.039106797, 0.08550682, 0.005255854, 0.09929136, 0.0722306, 0.09501713, 0.093023956, 0.05721128, 0.09952482, 0.021738088, 0.09381942, 0.033784438, 0.09948045, 0.028117776, 0.021284902, 0.079645276, 0.03431281, 0.0582495, 0.086238384, 0.08141068, 0.016465975, 0.06494167, 0.039164163, 0.03589337, 0.030209256, 0.09353763, 0.09642974, 0.07435914, 0.0696752, 0.08771876, 0.044762373, 0.014282644, 0.007970464, 0.053426113, 0.00040833952, 0.0036474944, 0.08283776, 0.011082137, 0.04308448, 0.02185439, 0.012870312, 0.07063519, 0.06552845, 0.058672618, 0.0024151087, 0.07420248, 0.08690079, 0.038192857, 0.08617926, 0.08544312, 0.06783936, 0.07528448, 0.051347066, 0.03206375, 0.06306287, 0.057547808, 0.00009969473, 0.00777086, 0.040565707, 0.03948797, 0.026823176, 0.065427996, 0.06638756, 0.0012147427, 0.047290124, 0.07486918, 0.081005454, 0.05057571, 0.07140004, 0.03447945, 0.098138504, 0.053005993, 0.07432371] (
            interpolation = "vertex"
        )
    }
}

def Xform "points_acceleration" (
    prepend apiSchemas = ["MaterialBindingAPI"]
    kind = "component"
)
{
    rel material:binding = </materials/usdpreviewsurface1>
    matrix4d xformOp:transform:xform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (7, 1, 0, 1) )
    uniform token[] xformOpOrder = ["xformOp:transform:xform"]

    def Points "points_0" (
        prepend apiSchemas = ["MaterialBindingAPI"]
    )
    {
        vector3f[] accelerations
            interpolation = "vertex"
        )
        float3[] extent = [(-1.2230003, -1.2212715, -1.2351003), (1.2195488, 1.2231666, 1.2131449)]
        rel material:binding = </materials/usdpreviewsurface1>
        point3f[] points = [(0.38730398, -0.887907, -0.7824701), (0.37888435, -0.56501573, -1.0314239), (-0.5264995, 1.099362, -0.24288183), (-0.89442015, -0.60337454, -0.61199725), (0.6784591, 0.84571725, 0.6030266), (-0.18982011, 1.0898279, -0.57317907), (0.03910296, -0.4077332, -1.1673785), (1.2195488, -0.10140892, -0.129891), (0.21425371, -0.30852768, 1.1811745), (-0.53159976, -0.80699706, -0.7703964), (-0.8131267, 0.061006084, -0.9281401), (-0.85945463, -0.6375627, 0.6272771), (0.5676166, -0.6398412, 0.90304875), (0.9633478, 0.5041866, 0.58908117), (0.21736181, 0.5633274, -1.0794611), (-0.4674736, 0.78629863, -0.8352455), (-0.07344386, -0.7496252, -0.97723436), (0.6265905, -0.17092133, 1.0531905), (0.090323724, -1.15859, -0.42948803), (-0.16568753, 0.99070287, 0.7228605), (0.6842804, 0.82939047, -0.61584353), (-0.75183094, -0.35732242, -0.91448784), (0.9354176, 0.07855371, 0.79988), (-1.0820671, -0.2209806, -0.5507492), (-0.09925218, 0.31763378, -1.1951159), (-1.0978217, 0.31550676, 0.4804732), (-1.1410375, 0.45612627, 0.08692572), (1.2097702, 0.28655407, -0.019021558), (0.07642955, -0.0367453, -1.2351003), (-0.800103, -0.8933495, -0.32635885), (-0.536653, -0.4930464, 0.99806476), (-0.47654638, 0.29836047, 1.1018707), (0.5413873, -1.0381134, -0.4066183), (0.2610739, 0.95212656, 0.7449432), (-0.50729084, 1.0289611, 0.47047934), (0.9549142, -0.64666396, 0.456157), (-0.8693383, 0.30830246, 0.83673525), (1.0148087, 0.6760756, 0.216717), (0.42512953, 0.16435228, 1.142101), (-0.37835386, -0.47216675, -1.0729157), (1.0879006, -0.1630946, -0.5564098), (-0.85347986, 0.54277766, -0.70623016), (-0.4129736, -0.053723045, -1.162766), (-0.6860053, 0.89717966, -0.51727563), (0.023971472, 0.25597012, 1.2131449), (1.0872693, -0.18571086, 0.55021995), (-1.0458416, -0.14701003, 0.6412946), (0.50007874, -0.15773255, -1.1119913), (0.46636364, 1.1240997, -0.2333361), (-0.94938254, 0.76473886, -0.19691095), (0.5093538, 0.2418612, -1.0962636), (1.1624988, 0.1986321, 0.36419272), (-1.214922, -0.014580868, 0.25186366), (0.8784175, -0.046430647, -0.8804387), (-1.2230003, -0.054916877, -0.15016614), (0.88275, 0.4068124, -0.7598066), (-1.1283305, -0.4331435, 0.2557554), (0.7628695, -0.49066153, -0.8369962), (-0.123398274, 0.66837245, 1.0330051), (0.84485775, -0.75175035, -0.5036011), (-0.75594825, -0.13876154, 0.95922184), (-0.9071001, 0.7040292, 0.4575504), (1.1130116, 0.2742014, -0.45789015), (-1.0561051, 0.17282727, -0.6223836), (0.38356853, 0.6170585, 1.0063504), (1.0558537, 0.6175447, -0.22609578), (0.8650891, -0.38702786, 0.7961693), (-0.5206652, 0.3977914, -1.0470287), (-0.9182125, -0.80834746, 0.1795015), (-0.6017659, 0.6984128, 0.8206797), (1.1844832, -0.29492894, 0.20272017), (1.0975087, -0.48316503, -0.30717826), (-1.1355951, 0.3858696, -0.31964043), (-0.2708108, -0.12072963, 1.1984526), (-1.0926381, -0.53914714, -0.19334997), (-0.07163029, -0.62138045, 1.0746007), (-0.09568428, 0.765152, -0.9623923), (1.0013137, -0.72745866, 0.019739542), (-0.37541258, -0.86117077, 0.81172544), (0.54648, 0.6423165, -0.9168939), (0.63264275, -0.9475972, 0.4798095), (0.35360166, 1.148712, 0.29685748), (-0.21501781, -1.2212715, 0.024279922), (0.7243833, 0.9917474, 0.14378133), (0.233415, -0.8965498, 0.83412576), (0.25294498, 0.99740624, -0.6849852), (-0.54499644, -1.0264542, 0.42666113), (-0.7684705, 0.958933, 0.13373494), (-0.09053223, -0.9983117, -0.72283894), (-0.046014287, 1.201273, 0.33227536), (-0.62768734, -1.0799967, 0.0046815393), (0.8331876, 0.882239, -0.2817154), (0.7319333, 0.4006585, 0.9073235), (0.6863256, -1.0345441, 0.009214027), (-0.1070535, -1.108712, 0.54770154), (-0.3964872, -1.1012977, -0.42020312), (0.06385075, 1.2231666, -0.1922773), (0.23966102, -1.2174228, -0.059149053), (-0.3223462, 1.2055982, 0.042117383), (0.25062457, -1.1616032, 0.3501846)] (
            interpolation = "vertex"
        )
        color3f[] primvars:displayColor = [(0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1)] (
            interpolation = "vertex"
        )
        int[] primvars:displayColor:indices = None
        vector3f[] velocities = [(100, 0, 0), (100, 0, 0), (100, 0, 0), (100, 0, 0), (100, 0, 0), (100, 0, 0), (100, 0, 0), (100, 0, 0), (100, 0, 0), (100, 0, 0), (100, 0, 0), (100, 0, 0), (100, 0, 0), (100, 0, 0), (100, 0, 0), (100, 0, 0), (100, 0, 0), (100, 0, 0), (100, 0, 0), (100, 0, 0), (100, 0, 0), (100, 0, 0), (100, 0, 0), (100, 0, 0), (100, 0, 0), (100, 0, 0), (100, 0, 0), (100, 0, 0), (100, 0, 0), (100, 0, 0), (100, 0, 0), (100, 0, 0), (100, 0, 0), (100, 0, 0), (100, 0, 0), (100, 0, 0), (100, 0, 0), (100, 0, 0), (100, 0, 0), (100, 0, 0), (100, 0, 0), (100, 0, 0), (100, 0, 0), (100, 0, 0), (100, 0, 0), (100, 0, 0), (100, 0, 0), (100, 0, 0), (100, 0, 0), (100, 0, 0), (100, 0, 0), (100, 0, 0), (100, 0, 0), (100, 0, 0), (100, 0, 0), (100, 0, 0), (100, 0, 0), (100, 0, 0), (100, 0, 0), (100, 0, 0), (100, 0, 0), (100, 0, 0), (100, 0, 0), (100, 0, 0), (100, 0, 0), (100, 0, 0), (100, 0, 0), (100, 0, 0), (100, 0, 0), (100, 0, 0), (100, 0, 0), (100, 0, 0), (100, 0, 0), (100, 0, 0), (100, 0, 0), (100, 0, 0), (100, 0, 0), (100, 0, 0), (100, 0, 0), (100, 0, 0), (100, 0, 0), (100, 0, 0), (100, 0, 0), (100, 0, 0), (100, 0, 0), (100, 0, 0), (100, 0, 0), (100, 0, 0), (100, 0, 0), (100, 0, 0), (100, 0, 0), (100, 0, 0), (100, 0, 0), (100, 0, 0), (100, 0, 0), (100, 0, 0), (100, 0, 0), (100, 0, 0), (100, 0, 0), (100, 0, 0)] (
            interpolation = "vertex"
        )
        float[] widths = [0.04172318, 0.00029251576, 0.081343226, 0.026238048, 0.00022482872, 0.018949378, 0.011619652, 0.06177759, 0.091621116, 0.05199168, 0.009368181, 0.0119826915, 0.09744946, 0.09223701, 0.01491077, 0.00862304, 0.08047523, 0.086910784, 0.08762624, 0.002495134, 0.074814476, 0.03745625, 0.0169585, 0.035533644, 0.067235015, 0.09425061, 0.060025204, 0.039106797, 0.08550682, 0.005255854, 0.09929136, 0.0722306, 0.09501713, 0.093023956, 0.05721128, 0.09952482, 0.021738088, 0.09381942, 0.033784438, 0.09948045, 0.028117776, 0.021284902, 0.079645276, 0.03431281, 0.0582495, 0.086238384, 0.08141068, 0.016465975, 0.06494167, 0.039164163, 0.03589337, 0.030209256, 0.09353763, 0.09642974, 0.07435914, 0.0696752, 0.08771876, 0.044762373, 0.014282644, 0.007970464, 0.053426113, 0.00040833952, 0.0036474944, 0.08283776, 0.011082137, 0.04308448, 0.02185439, 0.012870312, 0.07063519, 0.06552845, 0.058672618, 0.0024151087, 0.07420248, 0.08690079, 0.038192857, 0.08617926, 0.08544312, 0.06783936, 0.07528448, 0.051347066, 0.03206375, 0.06306287, 0.057547808, 0.00009969473, 0.00777086, 0.040565707, 0.03948797, 0.026823176, 0.065427996, 0.06638756, 0.0012147427, 0.047290124, 0.07486918, 0.081005454, 0.05057571, 0.07140004, 0.03447945, 0.098138504, 0.053005993, 0.07432371] (
            interpolation = "vertex"
        )
    }
}

def Xform "points_hermite" (
    prepend apiSchemas = ["MaterialBindingAPI"]
    kind = "component"
)
{
    rel material:binding = </materials/usdpreviewsurface1>
    matrix4d xformOp:transform:xform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (7, -2, 0, 1) )
    uniform token[] xformOpOrder = ["xformOp:transform:xform"]

    def Points "points_0" (
        prepend apiSchemas = ["MaterialBindingAPI"]
    )
    {
        float3[] extent.timeSamples = {
            4: [(-1.2280643, -1.2182348, -1.2351003), (1.2409871, 1.2375711, 1.2131449)],
            5: [(-1.2195488, -1.2231666, -1.2351003), (1.2230003, 1.2212715, 1.2131449)],
            6: [(-1.2396139, -1.217666, -1.2351003), (1.2281213, 1.2193238, 1.2131449)],
        }
        rel material:binding = </materials/usdpreviewsurface1>
        point3f[] points (
            interpolation = "vertex"
        )
        point3f[] points.timeSamples = {
            4: [(0.480146, 0.8413341, -0.7824701), (0.2263611, 0.6415269, -1.0314239), (-0.5664156, -1.0793386, -0.24288183), (1.0184233, -0.35617703, -0.61199725), (-1.0835531, 0.038171828, 0.6030266), (-0.7600756, -0.8037671, -0.57317907), (0.3034456, 0.27512935, -1.1673785), (-0.6478883, 1.038183, -0.129891), (0.11920223, 0.35620892, 1.1811745), (0.9647083, 0.056394756, -0.7703964), (0.43727204, -0.6882513, -0.9281401), (1.0249214, -0.3077085, 0.6272771), (0.17349479, 0.83754694, 0.90304875), (-0.9801297, 0.47073212, 0.58908117), (-0.5815063, -0.16258621, -1.0794611), (-0.3507662, -0.84484327, -0.8352455), (0.64478725, 0.38933447, -0.97723436), (-0.23763669, 0.604449, 1.0531905), (0.8746824, 0.76512724, -0.42948803), (-0.6950493, -0.72515583, 0.7228605), (-1.0739466, 0.052599847, -0.61584353), (0.7359413, -0.38899797, -0.91448784), (-0.6222569, 0.7028322, 0.79988), (0.8241041, -0.7352239, -0.5507492), (-0.19526136, -0.2694721, -1.1951159), (0.40349326, -1.0686207, 0.4804732), (0.3166162, -1.1873381, 0.08692572), (-0.9530199, 0.7983797, -0.019021558), (-0.016243793, 0.0832336, -1.2351003), (1.194465, -0.107198, -0.32635885), (0.7160772, -0.1353684, 0.99806476), (0.045773566, -0.56037503, 1.1018707), (0.5084192, 1.0546513, -0.4066183), (-0.91929054, -0.360013, 0.7449432), (-0.5214695, -1.0218486, 0.47047934), (-0.052603483, 1.1520714, 0.456157), (0.27265662, -0.8811684, 0.83673525), (-1.148679, 0.40920815, 0.216717), (-0.38592643, 0.24250275, 1.142101), (0.60469294, -0.0209651, -1.0729157), (-0.51973, 0.96954024, -0.5564098), (0.07522723, -1.0086508, -0.70623016), (0.2899816, -0.29890472, -1.162766), (-0.3089836, -1.0863074, -0.51727563), (-0.21950985, -0.13383107, 1.2131449), (-0.50122404, 0.9825566, 0.55021995), (0.74315226, -0.750414, 0.6412946), (-0.17256638, 0.4951557, -1.1119913), (-1.1798823, -0.29828316, -0.2333361), (-0.045348883, -1.2182348, -0.19691095), (-0.49841315, 0.26367116, -1.0962636), (-0.85428077, 0.8130575, 0.36419272), (0.7380954, -0.96512336, 0.25186366), (-0.48799294, 0.73187155, -0.8804387), (0.7752575, -0.9474816, -0.15016614), (-0.85388803, 0.46434802, -0.7598066), (1.0218279, -0.64545375, 0.2557554), (-0.06282541, 0.9048599, -0.8369962), (-0.46196482, -0.4985352, 1.0330051), (0.09743357, 1.1266854, -0.5036011), (0.56321186, -0.52297693, 0.95922184), (-0.021966875, -1.148044, 0.4575504), (-0.88526595, 0.72820693, -0.45789015), (0.4929179, -0.94987327, -0.6223836), (-0.7239512, -0.061486483, 1.0063504), (-1.1263037, 0.47710437, -0.22609578), (-0.20701239, 0.9248327, 0.7961693), (-0.007548094, -0.6551895, -1.0470287), (1.1969485, -0.2526938, 0.1795015), (-0.20002577, -0.89994013, 0.8206797), (-0.47180307, 1.125782, 0.20272017), (-0.2689168, 1.1686134, -0.30717826), (0.36967766, -1.1409688, -0.31964043), (0.25869203, -0.14488815, 1.1984526), (1.0854564, -0.5534638, -0.19334997), (0.54090613, 0.31410998, 1.0746007), (-0.55611044, -0.5341855, -0.9623923), (-0.015583634, 1.2375711, 0.019739542), (0.9147471, 0.21397999, 0.81172544), (-0.8416028, 0.053996056, -0.9168939), (0.38130236, 1.0736786, 0.4798095), (-1.1321899, -0.40338522, 0.29685748), (1.1074911, 0.55785316, 0.024279922), (-1.2280643, -0.012328982, 0.14378133), (0.57908475, 0.72314936, 0.83412576), (-0.95072496, -0.39360183, -0.6849852), (1.1486279, 0.17687094, 0.42666113), (-0.30917662, -1.1893313, 0.13373494), (0.85434335, 0.5243279, -0.72283894), (-0.9353885, -0.75513065, 0.33227536), (1.2409871, 0.14260197, 0.0046815393), (-1.2053406, 0.14036053, -0.2817154), (-0.7587812, 0.3471378, 0.9073235), (0.41889885, 1.168695, 0.009214027), (0.9527147, 0.57709384, 0.54770154), (1.1198256, 0.34066036, -0.42020312), (-1.0186266, -0.6801567, -0.1922773), (0.8325514, 0.9200075, -0.059149053), (-0.7736353, -0.97921526, 0.042117383), (0.7812531, 0.89542073, 0.3501846)],
            5: [(-0.38730398, 0.887907, -0.7824701), (-0.37888435, 0.56501573, -1.0314239), (0.5264995, -1.099362, -0.24288183), (0.89442015, 0.60337454, -0.61199725), (-0.6784591, -0.84571725, 0.6030266), (0.18982011, -1.0898279, -0.57317907), (-0.03910296, 0.4077332, -1.1673785), (-1.2195488, 0.10140892, -0.129891), (-0.21425371, 0.30852768, 1.1811745), (0.53159976, 0.80699706, -0.7703964), (0.8131267, -0.061006084, -0.9281401), (0.85945463, 0.6375627, 0.6272771), (-0.5676166, 0.6398412, 0.90304875), (-0.9633478, -0.5041866, 0.58908117), (-0.21736181, -0.5633274, -1.0794611), (0.4674736, -0.78629863, -0.8352455), (0.07344386, 0.7496252, -0.97723436), (-0.6265905, 0.17092133, 1.0531905), (-0.090323724, 1.15859, -0.42948803), (0.16568753, -0.99070287, 0.7228605), (-0.6842804, -0.82939047, -0.61584353), (0.75183094, 0.35732242, -0.91448784), (-0.9354176, -0.07855371, 0.79988), (1.0820671, 0.2209806, -0.5507492), (0.09925218, -0.31763378, -1.1951159), (1.0978217, -0.31550676, 0.4804732), (1.1410375, -0.45612627, 0.08692572), (-1.2097702, -0.28655407, -0.019021558), (-0.07642955, 0.0367453, -1.2351003), (0.800103, 0.8933495, -0.32635885), (0.536653, 0.4930464, 0.99806476), (0.47654638, -0.29836047, 1.1018707), (-0.5413873, 1.0381134, -0.4066183), (-0.2610739, -0.95212656, 0.7449432), (0.50729084, -1.0289611, 0.47047934), (-0.9549142, 0.64666396, 0.456157), (0.8693383, -0.30830246, 0.83673525), (-1.0148087, -0.6760756, 0.216717), (-0.42512953, -0.16435228, 1.142101), (0.37835386, 0.47216675, -1.0729157), (-1.0879006, 0.1630946, -0.5564098), (0.85347986, -0.54277766, -0.70623016), (0.4129736, 0.053723045, -1.162766), (0.6860053, -0.89717966, -0.51727563), (-0.023971472, -0.25597012, 1.2131449), (-1.0872693, 0.18571086, 0.55021995), (1.0458416, 0.14701003, 0.6412946), (-0.50007874, 0.15773255, -1.1119913), (-0.46636364, -1.1240997, -0.2333361), (0.94938254, -0.76473886, -0.19691095), (-0.5093538, -0.2418612, -1.0962636), (-1.1624988, -0.1986321, 0.36419272), (1.214922, 0.014580868, 0.25186366), (-0.8784175, 0.046430647, -0.8804387), (1.2230003, 0.054916877, -0.15016614), (-0.88275, -0.4068124, -0.7598066), (1.1283305, 0.4331435, 0.2557554), (-0.7628695, 0.49066153, -0.8369962), (0.123398274, -0.66837245, 1.0330051), (-0.84485775, 0.75175035, -0.5036011), (0.75594825, 0.13876154, 0.95922184), (0.9071001, -0.7040292, 0.4575504), (-1.1130116, -0.2742014, -0.45789015), (1.0561051, -0.17282727, -0.6223836), (-0.38356853, -0.6170585, 1.0063504), (-1.0558537, -0.6175447, -0.22609578), (-0.8650891, 0.38702786, 0.7961693), (0.5206652, -0.3977914, -1.0470287), (0.9182125, 0.80834746, 0.1795015), (0.6017659, -0.6984128, 0.8206797), (-1.1844832, 0.29492894, 0.20272017), (-1.0975087, 0.48316503, -0.30717826), (1.1355951, -0.3858696, -0.31964043), (0.2708108, 0.12072963, 1.1984526), (1.0926381, 0.53914714, -0.19334997), (0.07163029, 0.62138045, 1.0746007), (0.09568428, -0.765152, -0.9623923), (-1.0013137, 0.72745866, 0.019739542), (0.37541258, 0.86117077, 0.81172544), (-0.54648, -0.6423165, -0.9168939), (-0.63264275, 0.9475972, 0.4798095), (-0.35360166, -1.148712, 0.29685748), (0.21501781, 1.2212715, 0.024279922), (-0.7243833, -0.9917474, 0.14378133), (-0.233415, 0.8965498, 0.83412576), (-0.25294498, -0.99740624, -0.6849852), (0.54499644, 1.0264542, 0.42666113), (0.7684705, -0.958933, 0.13373494), (0.09053223, 0.9983117, -0.72283894), (0.046014287, -1.201273, 0.33227536), (0.62768734, 1.0799967, 0.0046815393), (-0.8331876, -0.882239, -0.2817154), (-0.7319333, -0.4006585, 0.9073235), (-0.6863256, 1.0345441, 0.009214027), (0.1070535, 1.108712, 0.54770154), (0.3964872, 1.1012977, -0.42020312), (-0.06385075, -1.2231666, -0.1922773), (-0.23966102, 1.2174228, -0.059149053), (0.3223462, -1.2055982, 0.042117383), (-0.25062457, 1.1616032, 0.3501846)],
            6: [(-0.9432879, 0.22043395, -0.7824701), (-0.6794348, 0.034124553, -1.0314239), (1.1960089, -0.2352894, -0.24288183), (0.051133156, 1.0776982, -0.61199725), (0.27224493, -1.049489, 0.6030266), (0.9870644, -0.49946, -0.57317907), (-0.35020533, 0.21244207, -1.1673785), (-0.8104603, -0.91691715, -0.129891), (-0.37540895, 0.012731537, 1.1811745), (-0.32901606, 0.90862036, -0.7703964), (0.535073, 0.61529964, -0.9281401), (0.0028229952, 1.0701123, 0.6272771), (-0.8522563, -0.07241845, 0.90304875), (-0.17185113, -1.0736434, 0.58908117), (0.3215829, -0.5110463, -1.0794611), (0.90977585, -0.09542048, -0.8352455), (-0.5569623, 0.50707483, -0.97723436), (-0.51164645, -0.40005952, 1.0531905), (-0.9826925, 0.6203262, -0.42948803), (0.89318013, -0.45953655, 0.7228605), (0.2556773, -1.0443933, -0.61584353), (0.1631056, 0.8162877, -0.91448784), (-0.49632478, -0.7967675, 0.79988), (0.46984255, 0.99947464, -0.5507492), (0.3139481, -0.11035755, -1.1951159), (0.9092928, 0.6913345, 0.4804732), (1.0478477, 0.6418978, 0.08692572), (-0.49363536, -1.1410439, -0.019021558), (-0.07515143, -0.039293207, -1.2351003), (-0.2376939, 1.1754743, -0.32635885), (-0.07434222, 0.7249582, 0.99806476), (0.52408534, 0.20359261, 1.1018707), (-1.1558156, 0.18673497, -0.4066183), (0.60709584, -0.77854943, 0.7449432), (1.1280929, -0.2085934, 0.47047934), (-1.0892924, -0.3787841, 0.456157), (0.7669068, 0.51249725, 0.83673525), (-0.0648393, -1.217666, 0.216717), (-0.122447714, -0.43903685, 1.142101), (-0.1522536, 0.5855868, -1.0729157), (-0.7811924, -0.77451015, -0.5564098), (0.94537246, 0.35959178, -0.70623016), (0.20385636, 0.36314726, -1.162766), (1.1293156, 0.01345098, -0.51727563), (0.19084452, -0.17226054, 1.2131449), (-0.7989434, -0.7604817, 0.55021995), (0.5074755, 0.92621005, 0.6412946), (-0.42543277, -0.3065375, -1.1119913), (0.6222001, -1.0459266, -0.2333361), (1.18063, 0.30375248, -0.19691095), (-0.11067726, -0.5528912, -1.0962636), (-0.5358469, -1.0505837, 0.36419272), (0.71472037, 0.98255926, 0.25186366), (-0.56242746, -0.67634934, -0.8804387), (0.68721837, 1.0131518, -0.15016614), (-0.20171323, -0.95081836, -0.7598066), (0.3274409, 1.1634111, 0.2557554), (-0.8494215, -0.318122, -0.8369962), (0.6095257, -0.30071124, 1.0330051), (-1.1077229, -0.22773474, -0.5036011), (0.34075856, 0.68890935, 0.95922184), (1.1066861, 0.30615887, 0.4575504), (-0.44568443, -1.0560997, -0.45789015), (0.7699832, 0.74320465, -0.6223836), (0.2652762, -0.6763982, 1.0063504), (-0.13629678, -1.2155704, -0.22609578), (-0.8274698, -0.46202096, 0.7961693), (0.63016474, 0.1795066, -1.0470287), (-0.09894079, 1.2193238, 0.1795015), (0.9196234, 0.064771146, 0.8206797), (-0.9446137, -0.7731031, 0.20272017), (-1.0434949, -0.5908399, -0.30717826), (0.98827827, 0.6795421, -0.31964043), (0.065146245, 0.28925782, 1.1984526), (0.22113127, 1.1981814, -0.19334997), (-0.45524994, 0.42894292, 1.0746007), (0.6705306, -0.38079083, -0.9623923), (-1.1817973, -0.36766884, 0.019739542), (-0.465825, 0.81581664, 0.81172544), (0.18811655, -0.82208455, -0.9168939), (-1.1378229, 0.059467554, 0.4798095), (0.70934945, -0.97025603, 0.29685748), (-0.85037065, 0.9025555, 0.024279922), (0.36183953, -1.1736124, 0.14378133), (-0.8582047, 0.3489539, 0.83412576), (0.6482508, -0.79910654, -0.6849852), (-0.4969157, 1.0505732, 0.42666113), (1.2281213, 0.04262978, 0.13373494), (-0.74608403, 0.66946316, -0.72283894), (0.9904129, -0.6813636, 0.33227536), (-0.4903923, 1.1488688, 0.0046815393), (0.20900664, -1.1953506, -0.2817154), (-0.116471976, -0.82624924, 0.9073235), (-1.2396139, 0.06842315, 0.009214027), (-0.82469904, 0.7487149, 0.54770154), (-0.6457022, 0.9762825, -0.42020312), (0.94227326, -0.782518, -0.1922773), (-1.1191404, 0.53579885, -0.059149053), (1.1591002, -0.4624511, 0.042117383), (-1.0809524, 0.49363595, 0.3501846)],
        }
        color3f[] primvars:displayColor (
            interpolation = "vertex"
        )
        color3f[] primvars:displayColor.timeSamples = {
            4: [(1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1)],
            5: [(1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1)],
            6: [(1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1), (1, 0, 1)],
        }
        int[] primvars:displayColor:indices = None
        vector3f[] velocities (
            interpolation = "vertex"
        )
        vector3f[] velocities.timeSamples = {



        }
        float[] widths (
            interpolation = "vertex"
        )
        float[] widths.timeSamples = {
            4: [0.04172318, 0.00029251576, 0.081343226, 0.026238048, 0.00022482872, 0.018949378, 0.011619652, 0.06177759, 0.091621116, 0.05199168, 0.009368181, 0.0119826915, 0.09744946, 0.09223701, 0.01491077, 0.00862304, 0.08047523, 0.086910784, 0.08762624, 0.002495134, 0.074814476, 0.03745625, 0.0169585, 0.035533644, 0.067235015, 0.09425061, 0.060025204, 0.039106797, 0.08550682, 0.005255854, 0.09929136, 0.0722306, 0.09501713, 0.093023956, 0.05721128, 0.09952482, 0.021738088, 0.09381942, 0.033784438, 0.09948045, 0.028117776, 0.021284902, 0.079645276, 0.03431281, 0.0582495, 0.086238384, 0.08141068, 0.016465975, 0.06494167, 0.039164163, 0.03589337, 0.030209256, 0.09353763, 0.09642974, 0.07435914, 0.0696752, 0.08771876, 0.044762373, 0.014282644, 0.007970464, 0.053426113, 0.00040833952, 0.0036474944, 0.08283776, 0.011082137, 0.04308448, 0.02185439, 0.012870312, 0.07063519, 0.06552845, 0.058672618, 0.0024151087, 0.07420248, 0.08690079, 0.038192857, 0.08617926, 0.08544312, 0.06783936, 0.07528448, 0.051347066, 0.03206375, 0.06306287, 0.057547808, 0.00009969473, 0.00777086, 0.040565707, 0.03948797, 0.026823176, 0.065427996, 0.06638756, 0.0012147427, 0.047290124, 0.07486918, 0.081005454, 0.05057571, 0.07140004, 0.03447945, 0.098138504, 0.053005993, 0.07432371],
            5: [0.04172318, 0.00029251576, 0.081343226, 0.026238048, 0.00022482872, 0.018949378, 0.011619652, 0.06177759, 0.091621116, 0.05199168, 0.009368181, 0.0119826915, 0.09744946, 0.09223701, 0.01491077, 0.00862304, 0.08047523, 0.086910784, 0.08762624, 0.002495134, 0.074814476, 0.03745625, 0.0169585, 0.035533644, 0.067235015, 0.09425061, 0.060025204, 0.039106797, 0.08550682, 0.005255854, 0.09929136, 0.0722306, 0.09501713, 0.093023956, 0.05721128, 0.09952482, 0.021738088, 0.09381942, 0.033784438, 0.09948045, 0.028117776, 0.021284902, 0.079645276, 0.03431281, 0.0582495, 0.086238384, 0.08141068, 0.016465975, 0.06494167, 0.039164163, 0.03589337, 0.030209256, 0.09353763, 0.09642974, 0.07435914, 0.0696752, 0.08771876, 0.044762373, 0.014282644, 0.007970464, 0.053426113, 0.00040833952, 0.0036474944, 0.08283776, 0.011082137, 0.04308448, 0.02185439, 0.012870312, 0.07063519, 0.06552845, 0.058672618, 0.0024151087, 0.07420248, 0.08690079, 0.038192857, 0.08617926, 0.08544312, 0.06783936, 0.07528448, 0.051347066, 0.03206375, 0.06306287, 0.057547808, 0.00009969473, 0.00777086, 0.040565707, 0.03948797, 0.026823176, 0.065427996, 0.06638756, 0.0012147427, 0.047290124, 0.07486918, 0.081005454, 0.05057571, 0.07140004, 0.03447945, 0.098138504, 0.053005993, 0.07432371],
            6: [0.04172318, 0.00029251576, 0.081343226, 0.026238048, 0.00022482872, 0.018949378, 0.011619652, 0.06177759, 0.091621116, 0.05199168, 0.009368181, 0.0119826915, 0.09744946, 0.09223701, 0.01491077, 0.00862304, 0.08047523, 0.086910784, 0.08762624, 0.002495134, 0.074814476, 0.03745625, 0.0169585, 0.035533644, 0.067235015, 0.09425061, 0.060025204, 0.039106797, 0.08550682, 0.005255854, 0.09929136, 0.0722306, 0.09501713, 0.093023956, 0.05721128, 0.09952482, 0.021738088, 0.09381942, 0.033784438, 0.09948045, 0.028117776, 0.021284902, 0.079645276, 0.03431281, 0.0582495, 0.086238384, 0.08141068, 0.016465975, 0.06494167, 0.039164163, 0.03589337, 0.030209256, 0.09353763, 0.09642974, 0.07435914, 0.0696752, 0.08771876, 0.044762373, 0.014282644, 0.007970464, 0.053426113, 0.00040833952, 0.0036474944, 0.08283776, 0.011082137, 0.04308448, 0.02185439, 0.012870312, 0.07063519, 0.06552845, 0.058672618, 0.0024151087, 0.07420248, 0.08690079, 0.038192857, 0.08617926, 0.08544312, 0.06783936, 0.07528448, 0.051347066, 0.03206375, 0.06306287, 0.057547808, 0.00009969473, 0.00777086, 0.040565707, 0.03948797, 0.026823176, 0.065427996, 0.06638756, 0.0012147427, 0.047290124, 0.07486918, 0.081005454, 0.05057571, 0.07140004, 0.03447945, 0.098138504, 0.053005993, 0.07432371],
        }
    }
}

def Scope "materials" (
    prepend apiSchemas = ["MaterialBindingAPI"]
)
{
    rel material:binding = </materials/usdpreviewsurface1>

    def Material "usdpreviewsurface1" (
        prepend apiSchemas = ["MaterialBindingAPI"]
    )
    {
        rel material:binding = </materials/usdpreviewsurface1>
        token outputs:displacement.connect = </materials/usdpreviewsurface1/usdpreviewsurface1.outputs:displacement>
        token outputs:surface.connect = </materials/usdpreviewsurface1/usdpreviewsurface1.outputs:surface>

        def Shader "usdpreviewsurface1" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            uniform token info:id = "UsdPreviewSurface"
            color3f inputs:diffuseColor = (0, 0, 0)
            color3f inputs:emissiveColor = (1, 0, 0)
            color3f inputs:emissiveColor.connect = </materials/usdpreviewsurface1/usdprimvarreader1.outputs:result>
            rel material:binding = </materials/usdpreviewsurface1>
            token outputs:displacement
            token outputs:surface
        }

        def Shader "usdprimvarreader1" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            uniform token info:id = "UsdPrimvarReader_float3"
            string inputs:varname = "displayColor"
            rel material:binding = </materials/usdpreviewsurface1>
            vector3f outputs:result
        }
    }
}

def Camera "camera" (
    prepend apiSchemas = ["HoudiniCameraPlateAPI", "HoudiniViewportGuideAPI"]
)
{
    float2 clippingRange = (1, 1000000)
    float exposure = 0
    float focalLength.timeSamples = {
        4: 0.5,
        5: 0.5,
        6: 0.5,
    }
    float focusDistance = 5
    float fStop = 0
    float horizontalAperture.timeSamples = {
        4: 0.20955,
        5: 0.20955,
        6: 0.20955,
    }
    float horizontalApertureOffset.timeSamples = {
        4: 0,
        5: 0,
        6: 0,
    }
    asset houdini:backgroundimage = @@
    asset houdini:foregroundimage = @@
    float houdini:guidescale.timeSamples = {
        4: 1,
        5: 1,
        6: 1,
    }
    bool houdini:inviewermenu = 1
    token projection = "perspective"
    double shutter:close = 0.5
    double shutter:open = -0.5
    float verticalAperture.timeSamples = {
        4: 0.11787187,
        5: 0.11787187,
        6: 0.11787187,
    }
    float verticalApertureOffset.timeSamples = {
        4: 0,
        5: 0,
        6: 0,
    }
    matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 4, 65, 1) )
    uniform token[] xformOpOrder = ["xformOp:transform"]
}

